/*
 *  Copyright(c) 2023 Qualcomm Innovation Center, Inc. All Rights Reserved.
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, see <http://www.gnu.org/licenses/>.
 */

Q6INSN(A2_add,"Rd32=add(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"Add 32-bit registers",{ RdV=RsV+RtV;})
Q6INSN(A2_sub,"Rd32=sub(Rt32,Rs32)",ATTRIBS(A_XUMINOR),"Subtract 32-bit registers",{ RdV=RtV-RsV;})
Q6INSN(A2_paddt,"if (Pu4) Rd32=add(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add 32-bit registers",{if(fLSBOLD(PuV)){RdV=RsV+RtV;} else {CANCEL;}})
Q6INSN(A2_paddf,"if (!Pu4) Rd32=add(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add 32-bit registers",{if(fLSBOLDNOT(PuV)){RdV=RsV+RtV;} else {CANCEL;}})
Q6INSN(A2_paddtnew,"if (Pu4.new) Rd32=add(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add 32-bit registers",{if(fLSBNEW(PuN)){RdV=RsV+RtV;} else {CANCEL;}})
Q6INSN(A2_paddfnew,"if (!Pu4.new) Rd32=add(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add 32-bit registers",{if(fLSBNEWNOT(PuN)){RdV=RsV+RtV;} else {CANCEL;}})
Q6INSN(A2_psubt,"if (Pu4) Rd32=sub(Rt32,Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Subtract 32-bit registers",{if(fLSBOLD(PuV)){RdV=RtV-RsV;} else {CANCEL;}})
Q6INSN(A2_psubf,"if (!Pu4) Rd32=sub(Rt32,Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Subtract 32-bit registers",{if(fLSBOLDNOT(PuV)){RdV=RtV-RsV;} else {CANCEL;}})
Q6INSN(A2_psubtnew,"if (Pu4.new) Rd32=sub(Rt32,Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Subtract 32-bit registers",{if(fLSBNEW(PuN)){RdV=RtV-RsV;} else {CANCEL;}})
Q6INSN(A2_psubfnew,"if (!Pu4.new) Rd32=sub(Rt32,Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Subtract 32-bit registers",{if(fLSBNEWNOT(PuN)){RdV=RtV-RsV;} else {CANCEL;}})
Q6INSN(A2_paddit,"if (Pu4) Rd32=add(Rs32,#s8)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add Register and immediate",{if(fLSBOLD(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
Q6INSN(A2_paddif,"if (!Pu4) Rd32=add(Rs32,#s8)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add Register and immediate",{if(fLSBOLDNOT(PuV)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
Q6INSN(A2_padditnew,"if (Pu4.new) Rd32=add(Rs32,#s8)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add Register and immediate",{if(fLSBNEW(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
Q6INSN(A2_paddifnew,"if (!Pu4.new) Rd32=add(Rs32,#s8)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally Add Register and immediate",{if(fLSBNEWNOT(PuN)){fIMMEXT(siV); RdV=RsV+siV;} else {CANCEL;}})
Q6INSN(A2_pxort,"if (Pu4) Rd32=xor(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally XOR registers",{if(fLSBOLD(PuV)){RdV=RsV^RtV;} else {CANCEL;}})
Q6INSN(A2_pxorf,"if (!Pu4) Rd32=xor(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally XOR registers",{if(fLSBOLDNOT(PuV)){RdV=RsV^RtV;} else {CANCEL;}})
Q6INSN(A2_pxortnew,"if (Pu4.new) Rd32=xor(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally XOR registers",{if(fLSBNEW(PuN)){RdV=RsV^RtV;} else {CANCEL;}})
Q6INSN(A2_pxorfnew,"if (!Pu4.new) Rd32=xor(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally XOR registers",{if(fLSBNEWNOT(PuN)){RdV=RsV^RtV;} else {CANCEL;}})
Q6INSN(A2_pandt,"if (Pu4) Rd32=and(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally AND registers",{if(fLSBOLD(PuV)){RdV=RsV&RtV;} else {CANCEL;}})
Q6INSN(A2_pandf,"if (!Pu4) Rd32=and(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally AND registers",{if(fLSBOLDNOT(PuV)){RdV=RsV&RtV;} else {CANCEL;}})
Q6INSN(A2_pandtnew,"if (Pu4.new) Rd32=and(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally AND registers",{if(fLSBNEW(PuN)){RdV=RsV&RtV;} else {CANCEL;}})
Q6INSN(A2_pandfnew,"if (!Pu4.new) Rd32=and(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally AND registers",{if(fLSBNEWNOT(PuN)){RdV=RsV&RtV;} else {CANCEL;}})
Q6INSN(A2_port,"if (Pu4) Rd32=or(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally OR registers",{if(fLSBOLD(PuV)){RdV=RsV|RtV;} else {CANCEL;}})
Q6INSN(A2_porf,"if (!Pu4) Rd32=or(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally OR registers",{if(fLSBOLDNOT(PuV)){RdV=RsV|RtV;} else {CANCEL;}})
Q6INSN(A2_portnew,"if (Pu4.new) Rd32=or(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally OR registers",{if(fLSBNEW(PuN)){RdV=RsV|RtV;} else {CANCEL;}})
Q6INSN(A2_porfnew,"if (!Pu4.new) Rd32=or(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally OR registers",{if(fLSBNEWNOT(PuN)){RdV=RsV|RtV;} else {CANCEL;}})
Q6INSN(A4_psxtbt,"if (Pu4) Rd32=sxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend byte",{if(fLSBOLD(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxtbf,"if (!Pu4) Rd32=sxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend byte",{if(fLSBOLDNOT(PuV)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxtbtnew,"if (Pu4.new) Rd32=sxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend byte",{if(fLSBNEW(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxtbfnew,"if (!Pu4.new) Rd32=sxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend byte",{if(fLSBNEWNOT(PuN)){RdV=fSXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxtbt,"if (Pu4) Rd32=zxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend byte",{if(fLSBOLD(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxtbf,"if (!Pu4) Rd32=zxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend byte",{if(fLSBOLDNOT(PuV)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxtbtnew,"if (Pu4.new) Rd32=zxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend byte",{if(fLSBNEW(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxtbfnew,"if (!Pu4.new) Rd32=zxtb(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend byte",{if(fLSBNEWNOT(PuN)){RdV=fZXTN(8,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxtht,"if (Pu4) Rd32=sxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend halfword",{if(fLSBOLD(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxthf,"if (!Pu4) Rd32=sxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend halfword",{if(fLSBOLDNOT(PuV)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxthtnew,"if (Pu4.new) Rd32=sxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend halfword",{if(fLSBNEW(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_psxthfnew,"if (!Pu4.new) Rd32=sxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally sign-extend halfword",{if(fLSBNEWNOT(PuN)){RdV=fSXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxtht,"if (Pu4) Rd32=zxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend halfword",{if(fLSBOLD(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxthf,"if (!Pu4) Rd32=zxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend halfword",{if(fLSBOLDNOT(PuV)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxthtnew,"if (Pu4.new) Rd32=zxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend halfword",{if(fLSBNEW(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_pzxthfnew,"if (!Pu4.new) Rd32=zxth(Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Conditionally zero-extend halfword",{if(fLSBNEWNOT(PuN)){RdV=fZXTN(16,32,RsV);} else {CANCEL;}})
Q6INSN(A4_paslht,"if (Pu4) Rd32=aslh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBOLD(PuV)){RdV=RsV<<16;} else {CANCEL;}})
Q6INSN(A4_paslhf,"if (!Pu4) Rd32=aslh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBOLDNOT(PuV)){RdV=RsV<<16;} else {CANCEL;}})
Q6INSN(A4_paslhtnew,"if (Pu4.new) Rd32=aslh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBNEW(PuN)){RdV=RsV<<16;} else {CANCEL;}})
Q6INSN(A4_paslhfnew,"if (!Pu4.new) Rd32=aslh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBNEWNOT(PuN)){RdV=RsV<<16;} else {CANCEL;}})
Q6INSN(A4_pasrht,"if (Pu4) Rd32=asrh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBOLD(PuV)){RdV=RsV>>16;} else {CANCEL;}})
Q6INSN(A4_pasrhf,"if (!Pu4) Rd32=asrh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBOLDNOT(PuV)){RdV=RsV>>16;} else {CANCEL;}})
Q6INSN(A4_pasrhtnew,"if (Pu4.new) Rd32=asrh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBNEW(PuN)){RdV=RsV>>16;} else {CANCEL;}})
Q6INSN(A4_pasrhfnew,"if (!Pu4.new) Rd32=asrh(Rs32)",ATTRIBS(A_ARCHV2),"Conditionally zero-extend halfword",{if(fLSBNEWNOT(PuN)){RdV=RsV>>16;} else {CANCEL;}})
Q6INSN(A2_tfrt,"if (Pu4) Rd32=Rs32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (Pu4) Rd32=Rs32 to if (Pu4) Rd32=add(Rs32,#0)",fASM_MAP("if (Pu4) Rd32=Rs32","if (Pu4) Rd32=add(Rs32,#0)"))
Q6INSN(A2_tfrf,"if (!Pu4) Rd32=Rs32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (!Pu4) Rd32=Rs32 to if (!Pu4) Rd32=add(Rs32,#0)",fASM_MAP("if (!Pu4) Rd32=Rs32","if (!Pu4) Rd32=add(Rs32,#0)"))
Q6INSN(A2_tfrtnew,"if (Pu4.new) Rd32=Rs32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (Pu4.new) Rd32=Rs32 to if (Pu4.new) Rd32=add(Rs32,#0)",fASM_MAP("if (Pu4.new) Rd32=Rs32","if (Pu4.new) Rd32=add(Rs32,#0)"))
Q6INSN(A2_tfrfnew,"if (!Pu4.new) Rd32=Rs32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (!Pu4.new) Rd32=Rs32 to if (!Pu4.new) Rd32=add(Rs32,#0)",fASM_MAP("if (!Pu4.new) Rd32=Rs32","if (!Pu4.new) Rd32=add(Rs32,#0)"))
Q6INSN(A2_tfrpt,"if (Pu4) Rdd32=Rss32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (Pu4) Rdd32=Rss32 to if (Pu4) Rdd32=combine(Rss.H32,Rss.L32)",fASM_MAP("if (Pu4) Rdd32=Rss32","if (Pu4) Rdd32=combine(Rss.H32,Rss.L32)"))
Q6INSN(A2_tfrpf,"if (!Pu4) Rdd32=Rss32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (!Pu4) Rdd32=Rss32 to if (!Pu4) Rdd32=combine(Rss.H32,Rss.L32)",fASM_MAP("if (!Pu4) Rdd32=Rss32","if (!Pu4) Rdd32=combine(Rss.H32,Rss.L32)"))
Q6INSN(A2_tfrptnew,"if (Pu4.new) Rdd32=Rss32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (Pu4.new) Rdd32=Rss32 to if (Pu4.new) Rdd32=combine(Rss.H32,Rss.L32)",fASM_MAP("if (Pu4.new) Rdd32=Rss32","if (Pu4.new) Rdd32=combine(Rss.H32,Rss.L32)"))
Q6INSN(A2_tfrpfnew,"if (!Pu4.new) Rdd32=Rss32",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from if (!Pu4.new) Rdd32=Rss32 to if (!Pu4.new) Rdd32=combine(Rss.H32,Rss.L32)",fASM_MAP("if (!Pu4.new) Rdd32=Rss32","if (!Pu4.new) Rdd32=combine(Rss.H32,Rss.L32)"))
Q6INSN(A2_addsat,"Rd32=add(Rs32,Rt32):sat",ATTRIBS(),"Add 32-bit registers with saturation",{ RdV=fSAT(fSE32_64(RsV)+fSE32_64(RtV)); })
Q6INSN(A2_subsat,"Rd32=sub(Rt32,Rs32):sat",ATTRIBS(),"Subtract 32-bit registers with saturation",{ RdV=fSAT(fSE32_64(RtV) - fSE32_64(RsV)); })
Q6INSN(A2_addi,"Rd32=add(Rs32,#s16)",ATTRIBS(A_XUMINOR),"Add a signed immediate to a register",{ fIMMEXT(siV); RdV=RsV+siV;})
Q6INSN(C4_addipc,"Rd32=add(pc,#u6)",ATTRIBS(),"Add immediate to PC",{ RdV=fREAD_PC()+fIMMEXT(uiV);})
Q6INSN(A2_addh_l16_ll,"Rd32=add(Rt.L32,Rs.L32)",ATTRIBS(),"",{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(0,RsV)));})
Q6INSN(A2_addh_l16_hl,"Rd32=add(Rt.L32,Rs.H32)",ATTRIBS(),"",{RdV=fSXTN(16,32,(fGETHALF(0,RtV)+fGETHALF(1,RsV)));})
Q6INSN(A2_addh_l16_sat_ll,"Rd32=add(Rt.L32,Rs.L32):sat",ATTRIBS(),"",{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV));})
Q6INSN(A2_addh_l16_sat_hl,"Rd32=add(Rt.L32,Rs.H32):sat",ATTRIBS(),"",{RdV=fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV));})
Q6INSN(A2_subh_l16_ll,"Rd32=sub(Rt.L32,Rs.L32)",ATTRIBS(),"",{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(0,RsV)));})
Q6INSN(A2_subh_l16_hl,"Rd32=sub(Rt.L32,Rs.H32)",ATTRIBS(),"",{RdV=fSXTN(16,32,(fGETHALF(0,RtV)-fGETHALF(1,RsV)));})
Q6INSN(A2_subh_l16_sat_ll,"Rd32=sub(Rt.L32,Rs.L32):sat",ATTRIBS(),"",{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV));})
Q6INSN(A2_subh_l16_sat_hl,"Rd32=sub(Rt.L32,Rs.H32):sat",ATTRIBS(),"",{RdV=fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV));})
Q6INSN(A2_addh_h16_ll,"Rd32=add(Rt.L32,Rs.L32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(0,RtV)+fGETHALF(0,RsV))<<16;})
Q6INSN(A2_addh_h16_lh,"Rd32=add(Rt.L32,Rs.H32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(0,RtV)+fGETHALF(1,RsV))<<16;})
Q6INSN(A2_addh_h16_hl,"Rd32=add(Rt.H32,Rs.L32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(1,RtV)+fGETHALF(0,RsV))<<16;})
Q6INSN(A2_addh_h16_hh,"Rd32=add(Rt.H32,Rs.H32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(1,RtV)+fGETHALF(1,RsV))<<16;})
Q6INSN(A2_addh_h16_sat_ll,"Rd32=add(Rt.L32,Rs.L32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(0,RsV)))<<16;})
Q6INSN(A2_addh_h16_sat_lh,"Rd32=add(Rt.L32,Rs.H32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(0,RtV)+fGETHALF(1,RsV)))<<16;})
Q6INSN(A2_addh_h16_sat_hl,"Rd32=add(Rt.H32,Rs.L32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(0,RsV)))<<16;})
Q6INSN(A2_addh_h16_sat_hh,"Rd32=add(Rt.H32,Rs.H32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(1,RtV)+fGETHALF(1,RsV)))<<16;})
Q6INSN(A2_subh_h16_ll,"Rd32=sub(Rt.L32,Rs.L32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(0,RtV)-fGETHALF(0,RsV))<<16;})
Q6INSN(A2_subh_h16_lh,"Rd32=sub(Rt.L32,Rs.H32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(0,RtV)-fGETHALF(1,RsV))<<16;})
Q6INSN(A2_subh_h16_hl,"Rd32=sub(Rt.H32,Rs.L32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(1,RtV)-fGETHALF(0,RsV))<<16;})
Q6INSN(A2_subh_h16_hh,"Rd32=sub(Rt.H32,Rs.H32):<<16",ATTRIBS(),"",{RdV=(fGETHALF(1,RtV)-fGETHALF(1,RsV))<<16;})
Q6INSN(A2_subh_h16_sat_ll,"Rd32=sub(Rt.L32,Rs.L32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(0,RsV)))<<16;})
Q6INSN(A2_subh_h16_sat_lh,"Rd32=sub(Rt.L32,Rs.H32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(0,RtV)-fGETHALF(1,RsV)))<<16;})
Q6INSN(A2_subh_h16_sat_hl,"Rd32=sub(Rt.H32,Rs.L32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(0,RsV)))<<16;})
Q6INSN(A2_subh_h16_sat_hh,"Rd32=sub(Rt.H32,Rs.H32):sat:<<16",ATTRIBS(),"",{RdV=(fSATH(fGETHALF(1,RtV)-fGETHALF(1,RsV)))<<16;})
Q6INSN(A2_aslh,"Rd32=aslh(Rs32)",ATTRIBS(),"Arithmetic Shift Left by Halfword",{ RdV=RsV<<16; })
Q6INSN(A2_asrh,"Rd32=asrh(Rs32)",ATTRIBS(),"Arithmetic Shift Right by Halfword",{ RdV=RsV>>16; })
Q6INSN(A2_addp,"Rdd32=add(Rss32,Rtt32)",ATTRIBS(),"Add",{ RddV=RssV+RttV;})
Q6INSN(A2_addpsat,"Rdd32=add(Rss32,Rtt32):sat",ATTRIBS(A_ARCHV3),"Add",{ fADDSAT64(RddV,RssV,RttV);})
Q6INSN(A2_addspl,"Rdd32=add(Rss32,Rtt32):raw:lo",ATTRIBS(A_ARCHV3),"Add",{ RddV=RttV+fSXTN(32,64,fGETWORD(0,RssV));})
Q6INSN(A2_addsph,"Rdd32=add(Rss32,Rtt32):raw:hi",ATTRIBS(A_ARCHV3),"Add",{ RddV=RttV+fSXTN(32,64,fGETWORD(1,RssV));})
Q6INSN(A2_addsp,"Rdd32=add(Rs32,Rtt32)",ATTRIBS(A_MAPPING,A_CONDMAPPING,A_ARCHV3),"Conditional Mapping from Rdd32=add(Rs32,Rtt32) to either Rdd32=add(Rss32,Rtt32):raw:hi or Rdd32=add(Rss32,Rtt32):raw:lo",fCOND_ASM_MAP("Rdd32=add(Rs32,Rtt32)","Rs32 & 1","Rdd32=add(Rss32,Rtt32):raw:hi","Rdd32=add(Rss32,Rtt32):raw:lo"))
Q6INSN(A2_subp,"Rdd32=sub(Rtt32,Rss32)",ATTRIBS(),"Sub",{ RddV=RttV-RssV;})
Q6INSN(A4_addp_c,"Rdd32=add(Rss32,Rtt32,Px4):carry",ATTRIBS(A_RESTRICT_LATEPRED,A_NOTE_LATEPRED),"Add with Carry",{ fPREDUSE_TIMING(); RddV = RssV + RttV + fLSBOLD(PxV); PxV = f8BITSOF(fCARRY_FROM_ADD(RssV,RttV,fLSBOLD(PxV))); fHIDE(MARK_LATE_PRED_WRITE(PxN)) })
Q6INSN(A4_subp_c,"Rdd32=sub(Rss32,Rtt32,Px4):carry",ATTRIBS(A_RESTRICT_LATEPRED,A_NOTE_LATEPRED),"Sub with Carry",{ fPREDUSE_TIMING(); RddV = RssV + ~RttV + fLSBOLD(PxV); PxV = f8BITSOF(fCARRY_FROM_ADD(RssV,~RttV,fLSBOLD(PxV))); fHIDE(MARK_LATE_PRED_WRITE(PxN)) })
Q6INSN(A2_neg,"Rd32=neg(Rs32)",ATTRIBS(A_MAPPING),"Mapping from Rd32=neg(Rs32) to Rd32=sub(#0,Rs32)",fASM_MAP("Rd32=neg(Rs32)","Rd32=sub(#0,Rs32)"))
Q6INSN(A2_negsat,"Rd32=neg(Rs32):sat",ATTRIBS(),"Arithmetic negate register",{ RdV = fSAT(-fCAST8s(RsV)); })
Q6INSN(A2_abs,"Rd32=abs(Rs32)",ATTRIBS(),"Absolute Value register",{ RdV = fABS(RsV); })
Q6INSN(A2_abssat,"Rd32=abs(Rs32):sat",ATTRIBS(),"Arithmetic negate register",{ RdV = fSAT(fABS(fCAST4_8s(RsV))); })
Q6INSN(A2_vconj,"Rdd32=vconj(Rss32):sat",ATTRIBS(A_ARCHV2),"Vector Complex conjugate of Rss",{ fSETHALF(1,RddV,fSATN(16,-fGETHALF(1,RssV))); fSETHALF(0,RddV,fGETHALF(0,RssV)); fSETHALF(3,RddV,fSATN(16,-fGETHALF(3,RssV))); fSETHALF(2,RddV,fGETHALF(2,RssV)); })
Q6INSN(A2_negp,"Rdd32=neg(Rss32)",ATTRIBS(),"Arithmetic negate register",{ RddV = -RssV; })
Q6INSN(A2_absp,"Rdd32=abs(Rss32)",ATTRIBS(),"Absolute Value register",{ RddV = fABS(RssV); })
Q6INSN(A2_max,"Rd32=max(Rs32,Rt32)",ATTRIBS(),"Maximum of two registers",{ RdV = fMAX(RsV,RtV); })
Q6INSN(A2_maxu,"Rd32=maxu(Rs32,Rt32)",ATTRIBS(A_INTRINSIC_RETURNS_UNSIGNED),"Maximum of two registers (unsigned)",{ RdV = fMAX(fCAST4u(RsV),fCAST4u(RtV)); })
Q6INSN(A2_min,"Rd32=min(Rt32,Rs32)",ATTRIBS(),"Minimum of two registers",{ RdV = fMIN(RtV,RsV); })
Q6INSN(A2_minu,"Rd32=minu(Rt32,Rs32)",ATTRIBS(A_INTRINSIC_RETURNS_UNSIGNED),"Minimum of two registers (unsigned)",{ RdV = fMIN(fCAST4u(RtV),fCAST4u(RsV)); })
Q6INSN(A2_maxp,"Rdd32=max(Rss32,Rtt32)",ATTRIBS(A_ARCHV3),"Maximum of two register pairs",{ RddV = fMAX(RssV,RttV); })
Q6INSN(A2_maxup,"Rdd32=maxu(Rss32,Rtt32)",ATTRIBS(A_INTRINSIC_RETURNS_UNSIGNED,A_ARCHV3),"Maximum of two register pairs (unsigned)",{ RddV = fMAX(fCAST8u(RssV),fCAST8u(RttV)); })
Q6INSN(A2_minp,"Rdd32=min(Rtt32,Rss32)",ATTRIBS(A_ARCHV3),"Minimum of two register pairs",{ RddV = fMIN(RttV,RssV); })
Q6INSN(A2_minup,"Rdd32=minu(Rtt32,Rss32)",ATTRIBS(A_INTRINSIC_RETURNS_UNSIGNED,A_ARCHV3),"Minimum of two register pairs (unsigned)",{ RddV = fMIN(fCAST8u(RttV),fCAST8u(RssV)); })
Q6INSN(A2_nop,"nop",ATTRIBS(A_IT_NOP),"Nop (32-bit encoding)",fHIDE( { fNOP_EXECUTED }))
Q6INSN(A4_ext,"immext(#u26:6)",ATTRIBS(A_IT_EXTENDER),"This instruction carries the 26 most-significant immediate bits for the next instruction",{ fHIDE(); })
Q6INSN(A2_tfr,"Rd32=Rs32",ATTRIBS(A_XUMINOR),"tfr register",{ RdV=RsV;})
Q6INSN(A2_tfrsi,"Rd32=#s16",ATTRIBS(A_XUMINOR),"transfer signed immediate to register",{ fIMMEXT(siV); RdV=siV;})
Q6INSN(A2_tfrp,"Rdd32=Rss32",ATTRIBS(A_MAPPING),"Mapping from Rdd32=Rss32 to Rdd32=combine(Rss.H32,Rss.L32)",fASM_MAP("Rdd32=Rss32","Rdd32=combine(Rss.H32,Rss.L32)"))
Q6INSN(A2_tfrpi,"Rdd32=#s8",ATTRIBS(A_MAPPING,A_CONDMAPPING,A_ARCHV2),"Conditional Mapping from Rdd32=#s8 to either Rdd32=combine(#-1,#s8) or Rdd32=combine(#0,#s8)",fCOND_ASM_MAP("Rdd32=#s8","#s8<0","Rdd32=combine(#-1,#s8)","Rdd32=combine(#0,#s8)"))
Q6INSN(A2_zxtb,"Rd32=zxtb(Rs32)",ATTRIBS(A_MAPPING),"Mapping from Rd32=zxtb(Rs32) to Rd32=and(Rs32,#255)",fASM_MAP("Rd32=zxtb(Rs32)","Rd32=and(Rs32,#255)"))
Q6INSN(A2_sxtb,"Rd32=sxtb(Rs32)",ATTRIBS(A_XUMINOR),"Sign extend byte",{RdV = fSXTN(8,32,RsV);})
Q6INSN(A2_zxth,"Rd32=zxth(Rs32)",ATTRIBS(A_XUMINOR),"Zero extend half",{RdV = fZXTN(16,32,RsV);})
Q6INSN(A2_sxth,"Rd32=sxth(Rs32)",ATTRIBS(A_XUMINOR),"Sign extend half",{RdV = fSXTN(16,32,RsV);})
Q6INSN(A2_combinew,"Rdd32=combine(Rs32,Rt32)",ATTRIBS(A_ROPS_2,A_XUMINOR),"Combine two words into a register pair",{ fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); })
Q6INSN(A4_combineri,"Rdd32=combine(Rs32,#s8)",ATTRIBS(A_ROPS_2,A_XUMINOR),"Combine a word and an immediate into a register pair",{ fIMMEXT(siV); fSETWORD(0,RddV,siV); fSETWORD(1,RddV,RsV); })
Q6INSN(A4_combineir,"Rdd32=combine(#s8,Rs32)",ATTRIBS(A_ROPS_2,A_XUMINOR),"Combine a word and an immediate into a register pair",{ fIMMEXT(siV); fSETWORD(0,RddV,RsV); fSETWORD(1,RddV,siV); })
Q6INSN(A2_combineii,"Rdd32=combine(#s8,#S8)",ATTRIBS(A_ARCHV2,A_ROPS_2,A_XUMINOR),"Set two small immediates",{ fIMMEXT(siV); fSETWORD(0,RddV,SiV); fSETWORD(1,RddV,siV); })
Q6INSN(A4_combineii,"Rdd32=combine(#s8,#U6)",ATTRIBS(A_ROPS_2,A_XUMINOR),"Set two small immediates",{ fIMMEXT(UiV); fSETWORD(0,RddV,UiV); fSETWORD(1,RddV,siV); })
Q6INSN(A2_combine_hh,"Rd32=combine(Rt.H32,Rs.H32)",ATTRIBS(A_XUMINOR),"Combine two halfs into a register",{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(1,RsV);})
Q6INSN(A2_combine_hl,"Rd32=combine(Rt.H32,Rs.L32)",ATTRIBS(A_XUMINOR),"Combine two halfs into a register",{RdV = (fGETUHALF(1,RtV)<<16) | fGETUHALF(0,RsV);})
Q6INSN(A2_combine_lh,"Rd32=combine(Rt.L32,Rs.H32)",ATTRIBS(A_XUMINOR),"Combine two halfs into a register",{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(1,RsV);})
Q6INSN(A2_combine_ll,"Rd32=combine(Rt.L32,Rs.L32)",ATTRIBS(A_XUMINOR),"Combine two halfs into a register",{RdV = (fGETUHALF(0,RtV)<<16) | fGETUHALF(0,RsV);})
Q6INSN(A2_tfril,"Rx.L32=#u16",ATTRIBS(A_XUMINOR),"Set low 16-bits, leave upper 16 unchanged",{ fSETHALF(0,RxV,uiV);})
Q6INSN(A2_tfrih,"Rx.H32=#u16",ATTRIBS(A_XUMINOR),"Set high 16-bits, leave low 16 unchanged",{ fSETHALF(1,RxV,uiV);})
Q6INSN(A2_tfrcrr,"Rd32=Cs32",ATTRIBS(),"transfer control register to general register",{ RdV=CsV;})
Q6INSN(A2_tfrrcr,"Cd32=Rs32",ATTRIBS(),"transfer general register to control register",{ CdV=RsV;})
Q6INSN(A4_tfrcpp,"Rdd32=Css32",ATTRIBS(),"transfer control register to general register",{ RddV=CssV;})
Q6INSN(A4_tfrpcp,"Cdd32=Rss32",ATTRIBS(),"transfer general register to control register",{ CddV=RssV;})
Q6INSN(A2_and,"Rd32=and(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"logical AND",{ RdV=RsV&RtV;})
Q6INSN(A2_or,"Rd32=or(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"logical OR",{ RdV=RsV|RtV;})
Q6INSN(A2_xor,"Rd32=xor(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"logical XOR",{ RdV=RsV^RtV;})
Q6INSN(A2_not,"Rd32=not(Rs32)",ATTRIBS(A_MAPPING),"Mapping from Rd32=not(Rs32) to Rd32=sub(#-1,Rs32)",fASM_MAP("Rd32=not(Rs32)","Rd32=sub(#-1,Rs32)"))
Q6INSN(M2_xor_xacc,"Rx32^=xor(Rs32,Rt32)",ATTRIBS(A_ARCHV2),"logical XOR with XOR accumulation",{ RxV^=RsV^RtV;})
Q6INSN(M4_xor_xacc,"Rxx32^=xor(Rss32,Rtt32)",ATTRIBS(),"logical XOR with XOR accumulation",{ RxxV^=RssV^RttV;})
Q6INSN(A4_andn,"Rd32=and(Rt32,~Rs32)",ATTRIBS(),"And-Not",{ RdV = (RtV & ~RsV); })
Q6INSN(A4_orn,"Rd32=or(Rt32,~Rs32)",ATTRIBS(),"Or-Not",{ RdV = (RtV | ~RsV); })
Q6INSN(A4_andnp,"Rdd32=and(Rtt32,~Rss32)",ATTRIBS(),"And-Not",{ RddV = (RttV & ~RssV); })
Q6INSN(A4_ornp,"Rdd32=or(Rtt32,~Rss32)",ATTRIBS(),"Or-Not",{ RddV = (RttV | ~RssV); })
Q6INSN(S4_addaddi,"Rd32=add(Rs32,add(Ru32,#s6))",ATTRIBS(A_ROPS_2),"3-input add",{ RdV = RsV + RuV + fIMMEXT(siV); })
Q6INSN(S4_subaddi,"Rd32=add(Rs32,sub(#s6,Ru32))",ATTRIBS(A_ROPS_2),"3-input sub",{ RdV = RsV - RuV + fIMMEXT(siV); })
Q6INSN(M4_and_and,"Rx32&=and(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound And-And",{ RxV &= (RsV & RtV); })
Q6INSN(M4_and_andn,"Rx32&=and(Rs32,~Rt32)",ATTRIBS(A_ROPS_2),"Compound And-Andn",{ RxV &= (RsV & ~RtV); })
Q6INSN(M4_and_or,"Rx32&=or(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound And-Or",{ RxV &= (RsV | RtV); })
Q6INSN(M4_and_xor,"Rx32&=xor(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound And-xor",{ RxV &= (RsV ^ RtV); })
Q6INSN(M4_or_and,"Rx32|=and(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound Or-And",{ RxV |= (RsV & RtV); })
Q6INSN(M4_or_andn,"Rx32|=and(Rs32,~Rt32)",ATTRIBS(A_ROPS_2),"Compound Or-AndN",{ RxV |= (RsV & ~RtV); })
Q6INSN(M4_or_or,"Rx32|=or(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound Or-Or",{ RxV |= (RsV | RtV); })
Q6INSN(M4_or_xor,"Rx32|=xor(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound Or-xor",{ RxV |= (RsV ^ RtV); })
Q6INSN(S4_or_andix,"Rx32=or(Ru32,and(Rx32,#s10))",ATTRIBS(A_ROPS_2),"Compound Or-And",{ RxV = RuV | (RxV & fIMMEXT(siV)); })
Q6INSN(S4_or_andi,"Rx32|=and(Rs32,#s10)",ATTRIBS(A_ROPS_2),"Compound Or-And",{ RxV = RxV | (RsV & fIMMEXT(siV)); })
Q6INSN(S4_or_ori,"Rx32|=or(Rs32,#s10)",ATTRIBS(A_ROPS_2),"Compound Or-And",{ RxV = RxV | (RsV | fIMMEXT(siV)); })
Q6INSN(M4_xor_and,"Rx32^=and(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound Xor-And",{ RxV ^= (RsV & RtV); })
Q6INSN(M4_xor_or,"Rx32^=or(Rs32,Rt32)",ATTRIBS(A_ROPS_2),"Compound Xor-Or",{ RxV ^= (RsV | RtV); })
Q6INSN(M4_xor_andn,"Rx32^=and(Rs32,~Rt32)",ATTRIBS(A_ROPS_2),"Compound Xor-And",{ RxV ^= (RsV & ~RtV); })
Q6INSN(A2_subri,"Rd32=sub(#s10,Rs32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Subtract register from immediate",{ fIMMEXT(siV); RdV=siV-RsV;})
Q6INSN(A2_andir,"Rd32=and(Rs32,#s10)",ATTRIBS(A_ARCHV2,A_XUMINOR),"logical AND with immediate",{ fIMMEXT(siV); RdV=RsV&siV;})
Q6INSN(A2_orir,"Rd32=or(Rs32,#s10)",ATTRIBS(A_ARCHV2),"logical OR with immediate",{ fIMMEXT(siV); RdV=RsV|siV;})
Q6INSN(A2_andp,"Rdd32=and(Rss32,Rtt32)",ATTRIBS(),"logical AND pair",{ RddV=RssV&RttV;})
Q6INSN(A2_orp,"Rdd32=or(Rss32,Rtt32)",ATTRIBS(),"logical OR pair",{ RddV=RssV|RttV;})
Q6INSN(A2_xorp,"Rdd32=xor(Rss32,Rtt32)",ATTRIBS(),"logical eXclusive OR pair",{ RddV=RssV^RttV;})
Q6INSN(A2_notp,"Rdd32=not(Rss32)",ATTRIBS(),"logical NOT pair",{ RddV=~RssV;})
Q6INSN(A2_sxtw,"Rdd32=sxtw(Rs32)",ATTRIBS(),"Sign extend 32-bit word to 64-bit pair",{ RddV = fCAST4_8s(RsV); })
Q6INSN(A2_sat,"Rd32=sat(Rss32)",ATTRIBS(),"Saturate to 32-bit Signed",{ RdV = fSAT(RssV); })
Q6INSN(A2_roundsat,"Rd32=round(Rss32):sat",ATTRIBS(),"Round & Saturate to 32-bit Signed",{ fHIDE(size8s_t tmp;) fADDSAT64(tmp,RssV,0x080000000ULL); RdV = fGETWORD(1,tmp); })
Q6INSN(A2_sath,"Rd32=sath(Rs32)",ATTRIBS(),"Saturate to 16-bit Signed",{ RdV = fSATH(RsV); })
Q6INSN(A2_satuh,"Rd32=satuh(Rs32)",ATTRIBS(),"Saturate to 16-bit Unsigned",{ RdV = fSATUH(RsV); })
Q6INSN(A2_satub,"Rd32=satub(Rs32)",ATTRIBS(),"Saturate to 8-bit Unsigned",{ RdV = fSATUB(RsV); })
Q6INSN(A2_satb,"Rd32=satb(Rs32)",ATTRIBS(A_ARCHV2),"Saturate to 8-bit Signed",{ RdV = fSATB(RsV); })
Q6INSN(A2_vaddub,"Rdd32=vaddub(Rss32,Rtt32)",ATTRIBS(),"Add vector of bytes",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } })
Q6INSN(A2_vaddb_map,"Rdd32=vaddb(Rss32,Rtt32)",ATTRIBS(A_MAPPING),"Mapping from Rdd32=vaddb(Rss32,Rtt32) to Rdd32=vaddub(Rss32,Rtt32)",fASM_MAP("Rdd32=vaddb(Rss32,Rtt32)","Rdd32=vaddub(Rss32,Rtt32)"))
Q6INSN(A2_vaddubs,"Rdd32=vaddub(Rss32,Rtt32):sat",ATTRIBS(),"Add vector of bytes",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV))); } })
Q6INSN(A2_vaddh,"Rdd32=vaddh(Rss32,Rtt32)",ATTRIBS(),"Add vector of half integers",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RssV)+fGETHALF(i,RttV)); } })
Q6INSN(A2_vaddhs,"Rdd32=vaddh(Rss32,Rtt32):sat",ATTRIBS(),"Add vector of half integers with saturation",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RssV)+fGETHALF(i,RttV))); } })
Q6INSN(A2_vadduhs,"Rdd32=vadduh(Rss32,Rtt32):sat",ATTRIBS(),"Add vector of unsigned half integers with saturation",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RssV)+fGETUHALF(i,RttV))); } })
Q6INSN(A5_vaddhubs,"Rd32=vaddhub(Rss32,Rtt32):sat",ATTRIBS(),"Add vector of half integers with saturation and pack to unsigned bytes",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETBYTE(i,RdV,fSATUB(fGETHALF(i,RssV)+fGETHALF(i,RttV))); } })
Q6INSN(A2_vaddw,"Rdd32=vaddw(Rss32,Rtt32)",ATTRIBS(),"Add vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RssV)+fGETWORD(i,RttV)); } })
Q6INSN(A2_vaddws,"Rdd32=vaddw(Rss32,Rtt32):sat",ATTRIBS(),"Add vector of words with saturation",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RssV)+fGETWORD(i,RttV))); } })
Q6INSN(S4_vxaddsubw,"Rdd32=vxaddsubw(Rss32,Rtt32):sat",ATTRIBS(),"Cross vector add-sub words with saturation",{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)+fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)-fGETWORD(0,RttV))); })
Q6INSN(S4_vxsubaddw,"Rdd32=vxsubaddw(Rss32,Rtt32):sat",ATTRIBS(),"Cross vector sub-add words with saturation",{ fSETWORD(0,RddV,fSAT(fGETWORD(0,RssV)-fGETWORD(1,RttV))); fSETWORD(1,RddV,fSAT(fGETWORD(1,RssV)+fGETWORD(0,RttV))); })
Q6INSN(S4_vxaddsubh,"Rdd32=vxaddsubh(Rss32,Rtt32):sat",ATTRIBS(),"Cross vector add-sub halfwords with saturation",{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)+fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)-fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)+fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)-fGETHALF(2,RttV))); })
Q6INSN(S4_vxsubaddh,"Rdd32=vxsubaddh(Rss32,Rtt32):sat",ATTRIBS(),"Cross vector sub-add halfwords with saturation",{ fSETHALF(0,RddV,fSATH(fGETHALF(0,RssV)-fGETHALF(1,RttV))); fSETHALF(1,RddV,fSATH(fGETHALF(1,RssV)+fGETHALF(0,RttV))); fSETHALF(2,RddV,fSATH(fGETHALF(2,RssV)-fGETHALF(3,RttV))); fSETHALF(3,RddV,fSATH(fGETHALF(3,RssV)+fGETHALF(2,RttV))); })
Q6INSN(S4_vxaddsubhr,"Rdd32=vxaddsubh(Rss32,Rtt32):rnd:>>1:sat",ATTRIBS(),"Cross vector add-sub halfwords with shift, round, and saturation",{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)+fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)-fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)+fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)-fGETHALF(2,RttV)+1)>>1)); })
Q6INSN(S4_vxsubaddhr,"Rdd32=vxsubaddh(Rss32,Rtt32):rnd:>>1:sat",ATTRIBS(),"Cross vector sub-add halfwords with shift, round, and saturation",{ fSETHALF(0,RddV,fSATH((fGETHALF(0,RssV)-fGETHALF(1,RttV)+1)>>1)); fSETHALF(1,RddV,fSATH((fGETHALF(1,RssV)+fGETHALF(0,RttV)+1)>>1)); fSETHALF(2,RddV,fSATH((fGETHALF(2,RssV)-fGETHALF(3,RttV)+1)>>1)); fSETHALF(3,RddV,fSATH((fGETHALF(3,RssV)+fGETHALF(2,RttV)+1)>>1)); })
Q6INSN(A2_svavgh,"Rd32=vavgh(Rs32,Rt32)",ATTRIBS(A_ARCHV2),"Avg vector of half integers",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV))>>1)); } })
Q6INSN(A2_svavghs,"Rd32=vavgh(Rs32,Rt32):rnd",ATTRIBS(A_ARCHV2),"Avg vector of half integers with rounding",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RsV)+fGETHALF(i,RtV)+1)>>1)); } })
Q6INSN(A2_svnavgh,"Rd32=vnavgh(Rt32,Rs32)",ATTRIBS(A_ARCHV2),"Avg vector of half integers",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,((fGETHALF(i,RtV)-fGETHALF(i,RsV))>>1)); } })
Q6INSN(A2_svaddh,"Rd32=vaddh(Rs32,Rt32)",ATTRIBS(),"Add vector of half integers",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RsV)+fGETHALF(i,RtV)); } })
Q6INSN(A2_svaddhs,"Rd32=vaddh(Rs32,Rt32):sat",ATTRIBS(),"Add vector of half integers with saturation",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RsV)+fGETHALF(i,RtV))); } })
Q6INSN(A2_svadduhs,"Rd32=vadduh(Rs32,Rt32):sat",ATTRIBS(),"Add vector of unsigned half integers with saturation",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RsV)+fGETUHALF(i,RtV))); } })
Q6INSN(A2_svsubh,"Rd32=vsubh(Rt32,Rs32)",ATTRIBS(),"Sub vector of half integers",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fGETHALF(i,RtV)-fGETHALF(i,RsV)); } })
Q6INSN(A2_svsubhs,"Rd32=vsubh(Rt32,Rs32):sat",ATTRIBS(),"Sub vector of half integers with saturation",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATN(16,fGETHALF(i,RtV)-fGETHALF(i,RsV))); } })
Q6INSN(A2_svsubuhs,"Rd32=vsubuh(Rt32,Rs32):sat",ATTRIBS(),"Sub vector of unsigned half integers with saturation",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETHALF(i,RdV,fSATUN(16,fGETUHALF(i,RtV)-fGETUHALF(i,RsV))); } })
Q6INSN(A2_vraddub,"Rdd32=vraddub(Rss32,Rtt32)",ATTRIBS(),"Sum: two vectors of unsigned bytes",{ fHIDE(int i;) RddV = 0; for (i=0;i<4;i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i=4;i<8;i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } })
Q6INSN(A2_vraddub_acc,"Rxx32+=vraddub(Rss32,Rtt32)",ATTRIBS(),"Sum: two vectors of unsigned bytes",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + (fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)))); } fACC(); })
Q6INSN(M2_vraddh,"Rd32=vraddh(Rss32,Rtt32)",ATTRIBS(A_ARCHV3),"Sum: two vectors of halves",{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETHALF(i,RssV)+fGETHALF(i,RttV)); } })
Q6INSN(M2_vradduh,"Rd32=vradduh(Rss32,Rtt32)",ATTRIBS(A_ARCHV3),"Sum: two vectors of unsigned halves",{ fHIDE(int i;) RdV = 0; for (i=0;i<4;i++) { RdV += (fGETUHALF(i,RssV)+fGETUHALF(i,RttV)); } })
Q6INSN(A2_vsubub,"Rdd32=vsubub(Rtt32,Rss32)",ATTRIBS(),"Sub vector of bytes",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } })
Q6INSN(A2_vsubb_map,"Rdd32=vsubb(Rss32,Rtt32)",ATTRIBS(A_MAPPING),"Mapping from Rdd32=vsubb(Rss32,Rtt32) to Rdd32=vsubub(Rss32,Rtt32)",fASM_MAP("Rdd32=vsubb(Rss32,Rtt32)","Rdd32=vsubub(Rss32,Rtt32)"))
Q6INSN(A2_vsububs,"Rdd32=vsubub(Rtt32,Rss32):sat",ATTRIBS(),"Sub vector of bytes",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fSATUN(8,fGETUBYTE(i,RttV)-fGETUBYTE(i,RssV))); } })
Q6INSN(A2_vsubh,"Rdd32=vsubh(Rtt32,Rss32)",ATTRIBS(),"Sub vector of half integers",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fGETHALF(i,RttV)-fGETHALF(i,RssV)); } })
Q6INSN(A2_vsubhs,"Rdd32=vsubh(Rtt32,Rss32):sat",ATTRIBS(),"Sub vector of half integers with saturation",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATN(16,fGETHALF(i,RttV)-fGETHALF(i,RssV))); } })
Q6INSN(A2_vsubuhs,"Rdd32=vsubuh(Rtt32,Rss32):sat",ATTRIBS(),"Sub vector of unsigned half integers with saturation",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATUN(16,fGETUHALF(i,RttV)-fGETUHALF(i,RssV))); } })
Q6INSN(A2_vsubw,"Rdd32=vsubw(Rtt32,Rss32)",ATTRIBS(),"Sub vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fGETWORD(i,RttV)-fGETWORD(i,RssV)); } })
Q6INSN(A2_vsubws,"Rdd32=vsubw(Rtt32,Rss32):sat",ATTRIBS(),"Sub vector of words with saturation",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSATN(32,fGETWORD(i,RttV)-fGETWORD(i,RssV))); } })
Q6INSN(A2_vabsh,"Rdd32=vabsh(Rss32)",ATTRIBS(),"Negate vector of half integers",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RssV))); } })
Q6INSN(A2_vabshsat,"Rdd32=vabsh(Rss32):sat",ATTRIBS(),"Negate vector of half integers",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fABS(fGETHALF(i,RssV)))); } })
Q6INSN(A2_vabsw,"Rdd32=vabsw(Rss32)",ATTRIBS(),"Absolute Value vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RssV))); } })
Q6INSN(A2_vabswsat,"Rdd32=vabsw(Rss32):sat",ATTRIBS(),"Absolute Value vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fABS(fGETWORD(i,RssV)))); } })
Q6INSN(M2_vabsdiffw,"Rdd32=vabsdiffw(Rtt32,Rss32)",ATTRIBS(A_ARCHV2),"Absolute Differences: vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fABS(fGETWORD(i,RttV) - fGETWORD(i,RssV))); } })
Q6INSN(M2_vabsdiffh,"Rdd32=vabsdiffh(Rtt32,Rss32)",ATTRIBS(A_ARCHV2),"Absolute Differences: vector of halfwords",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fABS(fGETHALF(i,RttV) - fGETHALF(i,RssV))); } })
Q6INSN(M6_vabsdiffb,"Rdd32=vabsdiffb(Rtt32,Rss32)",ATTRIBS(),"Absolute Differences: vector of halfwords",{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETBYTE(i,RttV) - fGETBYTE(i,RssV))); } })
Q6INSN(M6_vabsdiffub,"Rdd32=vabsdiffub(Rtt32,Rss32)",ATTRIBS(),"Absolute Differences: vector of halfwords",{ fHIDE(int i;) for (i=0;i<8;i++) { fSETBYTE(i,RddV,fABS(fGETUBYTE(i,RttV) - fGETUBYTE(i,RssV))); } })
Q6INSN(A2_vrsadub,"Rdd32=vrsadub(Rss32,Rtt32)",ATTRIBS(),"Sum of Absolute Differences: vector of unsigned bytes",{ fHIDE(int i;) RddV = 0; for (i = 0; i < 4; i++) { fSETWORD(0,RddV,(fGETWORD(0,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RddV,(fGETWORD(1,RddV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } })
Q6INSN(A2_vrsadub_acc,"Rxx32+=vrsadub(Rss32,Rtt32)",ATTRIBS(),"Sum of Absolute Differences: vector of unsigned bytes",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETWORD(0,RxxV,(fGETWORD(0,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } for (i = 4; i < 8; i++) { fSETWORD(1,RxxV,(fGETWORD(1,RxxV) + fABS((fGETUBYTE(i,RssV) - fGETUBYTE(i,RttV))))); } fACC(); })
Q6INSN(A2_vavgub,"Rdd32=vavgub(Rss32,Rtt32)",ATTRIBS(),"Average vector of unsigned bytes",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV) + fGETUBYTE(i,RttV))>>1)); } })
Q6INSN(A2_vavguh,"Rdd32=vavguh(Rss32,Rtt32)",ATTRIBS(),"Average vector of unsigned halfwords",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV))>>1); } })
Q6INSN(A2_vavgh,"Rdd32=vavgh(Rss32,Rtt32)",ATTRIBS(),"Average vector of halfwords",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } })
Q6INSN(A2_vnavgh,"Rdd32=vnavgh(Rtt32,Rss32)",ATTRIBS(),"Negative Average vector of halfwords",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1); } })
Q6INSN(A2_vavgw,"Rdd32=vavgw(Rss32,Rtt32)",ATTRIBS(),"Average vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1); } })
Q6INSN(A2_vnavgw,"Rdd32=vnavgw(Rtt32,Rss32)",ATTRIBS(A_ARCHV2),"Average vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1); } })
Q6INSN(A2_vavgwr,"Rdd32=vavgw(Rss32,Rtt32):rnd",ATTRIBS(),"Average vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV))+1)>>1); } })
Q6INSN(A2_vnavgwr,"Rdd32=vnavgw(Rtt32,Rss32):rnd:sat",ATTRIBS(A_ARCHV2),"Average vector of words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT((fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV))+1)>>1)); } })
Q6INSN(A2_vavgwcr,"Rdd32=vavgw(Rss32,Rtt32):crnd",ATTRIBS(A_ARCHV2),"Average vector of words with convergent rounding",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fCRND(fSXTN(32,33,fGETWORD(i,RssV))+fSXTN(32,33,fGETWORD(i,RttV)))>>1)); } })
Q6INSN(A2_vnavgwcr,"Rdd32=vnavgw(Rtt32,Rss32):crnd:sat",ATTRIBS(A_ARCHV2),"Average negative vector of words with convergent rounding",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,fSAT(fCRND(fSXTN(32,33,fGETWORD(i,RttV))-fSXTN(32,33,fGETWORD(i,RssV)))>>1)); } })
Q6INSN(A2_vavghcr,"Rdd32=vavgh(Rss32,Rtt32):crnd",ATTRIBS(A_ARCHV2),"Average vector of halfwords with conv rounding",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fCRND(fGETHALF(i,RssV)+fGETHALF(i,RttV))>>1); } })
Q6INSN(A2_vnavghcr,"Rdd32=vnavgh(Rtt32,Rss32):crnd:sat",ATTRIBS(A_ARCHV2),"Average negative vector of halfwords with conv rounding",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH(fCRND(fGETHALF(i,RttV)-fGETHALF(i,RssV))>>1)); } })
Q6INSN(A2_vavguw,"Rdd32=vavguw(Rss32,Rtt32)",ATTRIBS(),"Average vector of unsigned words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV)))>>1); } })
Q6INSN(A2_vavguwr,"Rdd32=vavguw(Rss32,Rtt32):rnd",ATTRIBS(),"Average vector of unsigned words",{ fHIDE(int i;) for (i=0;i<2;i++) { fSETWORD(i,RddV,(fZXTN(32,33,fGETUWORD(i,RssV))+fZXTN(32,33,fGETUWORD(i,RttV))+1)>>1); } })
Q6INSN(A2_vavgubr,"Rdd32=vavgub(Rss32,Rtt32):rnd",ATTRIBS(),"Average vector of unsigned bytes",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,((fGETUBYTE(i,RssV)+fGETUBYTE(i,RttV)+1)>>1)); } })
Q6INSN(A2_vavguhr,"Rdd32=vavguh(Rss32,Rtt32):rnd",ATTRIBS(),"Average vector of unsigned halfwords with rounding",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETUHALF(i,RssV)+fGETUHALF(i,RttV)+1)>>1); } })
Q6INSN(A2_vavghr,"Rdd32=vavgh(Rss32,Rtt32):rnd",ATTRIBS(),"Average vector of halfwords with rounding",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,(fGETHALF(i,RssV)+fGETHALF(i,RttV)+1)>>1); } })
Q6INSN(A2_vnavghr,"Rdd32=vnavgh(Rtt32,Rss32):rnd:sat",ATTRIBS(A_ARCHV2),"Negative Average vector of halfwords with rounding",{ fHIDE(int i;) for (i=0;i<4;i++) { fSETHALF(i,RddV,fSATH((fGETHALF(i,RttV)-fGETHALF(i,RssV)+1)>>1)); } })
Q6INSN(A4_round_ri,"Rd32=round(Rs32,#u5)",ATTRIBS(),"Round",{RdV = fRNDN(RsV,uiV)>>uiV; })
Q6INSN(A4_round_rr,"Rd32=round(Rs32,Rt32)",ATTRIBS(),"Round",{RdV = fRNDN(RsV,fZXTN(5,32,RtV))>>fZXTN(5,32,RtV); })
Q6INSN(A4_round_ri_sat,"Rd32=round(Rs32,#u5):sat",ATTRIBS(),"Round",{RdV = (fSAT(fRNDN(RsV,uiV)))>>uiV; })
Q6INSN(A4_round_rr_sat,"Rd32=round(Rs32,Rt32):sat",ATTRIBS(),"Round",{RdV = (fSAT(fRNDN(RsV,fZXTN(5,32,RtV))))>>fZXTN(5,32,RtV); })
Q6INSN(A4_cround_ri,"Rd32=cround(Rs32,#u5)",ATTRIBS(),"Convergent Round",{RdV = fCRNDN(RsV,uiV); })
Q6INSN(A4_cround_rr,"Rd32=cround(Rs32,Rt32)",ATTRIBS(),"Convergent Round",{RdV = fCRNDN(RsV,fZXTN(5,32,RtV)); })
Q6INSN(A7_croundd_ri,"Rdd32=cround(Rss32,#u6)",ATTRIBS(),"Convergent Round",{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (uiV == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (uiV - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, uiV); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); } else { rndbit_128 = fCAST8S_16S((1LL << (uiV - 1))); src_128 = fCAST8S_16S(RssV); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, uiV); RddV = fCAST16S_8S(tmp128); } fEXTENSION_AUDIO();})
Q6INSN(A7_croundd_rr,"Rdd32=cround(Rss32,Rt32)",ATTRIBS(),"Convergent Round",{ fHIDE(size16s_t rndbit_128;) fHIDE(size16s_t tmp128;) fHIDE(size16s_t src_128;) if (fZXTN(6,32,RtV) == 0) { RddV = RssV; } else if ((RssV & (size8s_t)((1LL << (fZXTN(6,32,RtV) - 1)) - 1LL)) == 0) { src_128 = fCAST8S_16S(RssV); rndbit_128 = fCAST8S_16S(1LL); rndbit_128 = fSHIFTL128(rndbit_128, fZXTN(6,32,RtV)); rndbit_128 = fAND128(rndbit_128, src_128); rndbit_128 = fSHIFTR128(rndbit_128, 1); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); } else { rndbit_128 = fCAST8S_16S((1LL << (fZXTN(6,32,RtV) - 1))); src_128 = fCAST8S_16S(RssV); tmp128 = fADD128(src_128, rndbit_128); tmp128 = fSHIFTR128(tmp128, fZXTN(6,32,RtV)); RddV = fCAST16S_8S(tmp128); } fEXTENSION_AUDIO();})
Q6INSN(A7_clip,"Rd32=clip(Rs32,#u5)",ATTRIBS(),"Clip to #s5",{fCLIP(RdV,RsV,uiV); fEXTENSION_AUDIO();})
Q6INSN(A7_vclip,"Rdd32=vclip(Rss32,#u5)",ATTRIBS(),"Clip to #s5",{ fHIDE(size4s_t tmp;) fCLIP(tmp, fGETWORD(0, RssV), uiV); fSETWORD(0, RddV, tmp); fCLIP(tmp,fGETWORD(1, RssV), uiV); fSETWORD(1, RddV, tmp); fEXTENSION_AUDIO(); })
Q6INSN(A4_vrminh,"Rxx32=vrminh(Rss32,Ru32)",ATTRIBS(),"Choose minimum elements of a vector",{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETHALF(i,RssV)) { min = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrmaxh,"Rxx32=vrmaxh(Rss32,Ru32)",ATTRIBS(),"Choose maximum elements of a vector",{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETHALF(i,RssV)) { max = fGETHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrminuh,"Rxx32=vrminuh(Rss32,Ru32)",ATTRIBS(),"Choose minimum elements of a vector",{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (min > fGETUHALF(i,RssV)) { min = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrmaxuh,"Rxx32=vrmaxuh(Rss32,Ru32)",ATTRIBS(),"Choose maximum elements of a vector",{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUHALF(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 4; i++) { if (max < fGETUHALF(i,RssV)) { max = fGETUHALF(i,RssV); addr = RuV | i<<1; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrminw,"Rxx32=vrminw(Rss32,Ru32)",ATTRIBS(),"Choose minimum elements of a vector",{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETWORD(i,RssV)) { min = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrmaxw,"Rxx32=vrmaxw(Rss32,Ru32)",ATTRIBS(),"Choose maximum elements of a vector",{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETWORD(i,RssV)) { max = fGETWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrminuw,"Rxx32=vrminuw(Rss32,Ru32)",ATTRIBS(),"Choose minimum elements of a vector",{ fHIDE(int i; size8s_t min; size4s_t addr;) min = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (min > fGETUWORD(i,RssV)) { min = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,min); fSETWORD(1,RxxV,addr); })
Q6INSN(A4_vrmaxuw,"Rxx32=vrmaxuw(Rss32,Ru32)",ATTRIBS(),"Choose maximum elements of a vector",{ fHIDE(int i; size8s_t max; size4s_t addr;) max = fGETUWORD(0,RxxV); addr = fGETWORD(1,RxxV); for (i = 0; i < 2; i++) { if (max < fGETUWORD(i,RssV)) { max = fGETUWORD(i,RssV); addr = RuV | i<<2; } } fSETWORD(0,RxxV,max); fSETWORD(1,RxxV,addr); })
Q6INSN(A2_vminb,"Rdd32=vminb(Rtt32,Rss32)",ATTRIBS(),"Choose minimum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } })
Q6INSN(A2_vmaxb,"Rdd32=vmaxb(Rtt32,Rss32)",ATTRIBS(),"Choose maximum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETBYTE(i,RttV),fGETBYTE(i,RssV))); } })
Q6INSN(A2_vminub,"Rdd32=vminub(Rtt32,Rss32)",ATTRIBS(),"Choose minimum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } })
Q6INSN(A2_vmaxub,"Rdd32=vmaxub(Rtt32,Rss32)",ATTRIBS(),"Choose maximum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,fMAX(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } })
Q6INSN(A2_vminh,"Rdd32=vminh(Rtt32,Rss32)",ATTRIBS(),"Choose minimum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETHALF(i,RttV),fGETHALF(i,RssV))); } })
Q6INSN(A2_vmaxh,"Rdd32=vmaxh(Rtt32,Rss32)",ATTRIBS(),"Choose maximum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETHALF(i,RttV),fGETHALF(i,RssV))); } })
Q6INSN(A2_vminuh,"Rdd32=vminuh(Rtt32,Rss32)",ATTRIBS(),"Choose minimum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMIN(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } })
Q6INSN(A2_vmaxuh,"Rdd32=vmaxuh(Rtt32,Rss32)",ATTRIBS(),"Choose maximum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETHALF(i,RddV,fMAX(fGETUHALF(i,RttV),fGETUHALF(i,RssV))); } })
Q6INSN(A2_vminw,"Rdd32=vminw(Rtt32,Rss32)",ATTRIBS(),"Choose minimum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETWORD(i,RttV),fGETWORD(i,RssV))); } })
Q6INSN(A2_vmaxw,"Rdd32=vmaxw(Rtt32,Rss32)",ATTRIBS(),"Choose maximum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETWORD(i,RttV),fGETWORD(i,RssV))); } })
Q6INSN(A2_vminuw,"Rdd32=vminuw(Rtt32,Rss32)",ATTRIBS(),"Choose minimum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMIN(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } })
Q6INSN(A2_vmaxuw,"Rdd32=vmaxuw(Rtt32,Rss32)",ATTRIBS(),"Choose maximum elements of two vectors",{ fHIDE(int i;) for (i = 0; i < 2; i++) { fSETWORD(i,RddV,fMAX(fGETUWORD(i,RttV),fGETUWORD(i,RssV))); } })
Q6INSN(A5_ACS,"Rxx32,Pe4=vacsh(Rss32,Rtt32)",ATTRIBS(A_NOTE_LATEPRED,A_RESTRICT_LATEPRED),"Add Compare and Select elements of two vectors, record the maximums and the decisions ",{ fHIDE(int i;) fHIDE(int xv;) fHIDE(int sv;) fHIDE(int tv;) for (i = 0; i < 4; i++) { xv = (int) fGETHALF(i,RxxV); sv = (int) fGETHALF(i,RssV); tv = (int) fGETHALF(i,RttV); xv = xv + tv; sv = sv - tv; fSETBIT(i*2, PeV, (xv > sv)); fSETBIT(i*2+1,PeV, (xv > sv)); fSETHALF(i, RxxV, fSATH(fMAX(xv,sv))); } })
Q6INSN(A6_vminub_RdP,"Rdd32,Pe4=vminub(Rtt32,Rss32)",ATTRIBS(A_NOTE_LATEPRED,A_RESTRICT_LATEPRED),"Vector minimum of bytes, records minimum and decision vector",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i, PeV, (fGETUBYTE(i,RttV) > fGETUBYTE(i,RssV))); fSETBYTE(i,RddV,fMIN(fGETUBYTE(i,RttV),fGETUBYTE(i,RssV))); } })
Q6INSN(A4_modwrapu,"Rd32=modwrap(Rs32,Rt32)",ATTRIBS(),"Wrap to an unsigned modulo buffer",{ if (RsV < 0) { RdV = RsV + fCAST4u(RtV); } else if (fCAST4u(RsV) >= fCAST4u(RtV)) { RdV = RsV - fCAST4u(RtV); } else { RdV = RsV; } })
Q6INSN(J2_jump,"jump #r22:2",ATTRIBS(A_JUMP,A_DIRECT,A_BRANCHADDER,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND),"direct unconditional jump",{fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);})
Q6INSN(J2_jumpr,"jumpr Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_XUMINOR),"indirect unconditional jump",{fJUMPR(RsN,RsV,COF_TYPE_JUMPR);})
Q6INSN(J2_jumprh,"jumprh Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_HINTED_COF),"indirect unconditional jump",{fJUMPR(RsN,RsV,COF_TYPE_JUMPR);})
Q6INSN(J2_jumpt,"if (Pu4) jump:nt #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
Q6INSN(J2_jumpf,"if (!Pu4) jump:nt #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
Q6INSN(J2_jumptpt,"if (Pu4) jump:t #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
Q6INSN(J2_jumpfpt,"if (!Pu4) jump:t #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fIMMEXT(riV);fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);; }})
Q6INSN(J2_jumpt_nopred_map,"if (Pu4) jump #r15:2",ATTRIBS(A_MAPPING),"Mapping from if (Pu4) jump #r15:2 to if (Pu4) jump:nt #r15:2",fASM_MAP("if (Pu4) jump #r15:2","if (Pu4) jump:nt #r15:2"))
Q6INSN(J2_jumpf_nopred_map,"if (!Pu4) jump #r15:2",ATTRIBS(A_MAPPING),"Mapping from if (!Pu4) jump #r15:2 to if (!Pu4) jump:nt #r15:2",fASM_MAP("if (!Pu4) jump #r15:2","if (!Pu4) jump:nt #r15:2"))
Q6INSN(J2_jumprt,"if (Pu4) jumpr:nt Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
Q6INSN(J2_jumprf,"if (!Pu4) jumpr:nt Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
Q6INSN(J2_jumprtpt,"if (Pu4) jumpr:t Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLD(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
Q6INSN(J2_jumprfpt,"if (!Pu4) jumpr:t Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTOLD,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fJUMPR(RsN,RsV,COF_TYPE_JUMPR);; }})
Q6INSN(J2_jumprt_nopred_map,"if (Pu4) jumpr Rs32",ATTRIBS(A_MAPPING),"Mapping from if (Pu4) jumpr Rs32 to if (Pu4) jumpr:nt Rs32",fASM_MAP("if (Pu4) jumpr Rs32","if (Pu4) jumpr:nt Rs32"))
Q6INSN(J2_jumprf_nopred_map,"if (!Pu4) jumpr Rs32",ATTRIBS(A_MAPPING),"Mapping from if (!Pu4) jumpr Rs32 to if (!Pu4) jumpr:nt Rs32",fASM_MAP("if (!Pu4) jumpr Rs32","if (!Pu4) jumpr:nt Rs32"))
Q6INSN(J2_jumptnew,"if (Pu4.new) jump:nt #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV2,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
Q6INSN(J2_jumpfnew,"if (!Pu4.new) jump:nt #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV2,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
Q6INSN(J2_jumptnewpt,"if (Pu4.new) jump:t #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV2,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
Q6INSN(J2_jumpfnewpt,"if (!Pu4.new) jump:t #r15:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV2,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMPNEW);;}})
Q6INSN(J2_jumprtnew,"if (Pu4.new) jumpr:nt Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTNEW,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV3,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
Q6INSN(J2_jumprfnew,"if (!Pu4.new) jumpr:nt Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTNEW,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV3,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_NOT_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
Q6INSN(J2_jumprtnewpt,"if (Pu4.new) jumpr:t Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTNEW,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV3,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEW(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEW(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
Q6INSN(J2_jumprfnewpt,"if (!Pu4.new) jumpr:t Rs32",ATTRIBS(A_JUMP,A_INDIRECT,A_CJUMP,A_DOTNEW,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_ARCHV3,A_PRED_BIT_12),"indirect conditional jump",{fBRANCH_SPECULATE_STALL(fLSBNEWNOT(PuN),, SPECULATE_TAKEN , 12,0)} {if(fLSBNEWNOT(PuN)){fJUMPR(RsN,RsV,COF_TYPE_JUMPR);;}})
Q6INSN(J4_hintjumpr,"hintjr(Rs32)",ATTRIBS(A_HINTJR),"hint indirect conditional jump",{fHINTJR(RsV);})
Q6INSN(J2_jumprz,"if (Rs32!=#0) jump:nt #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register true",{fBRANCH_SPECULATE_STALL((RsV!=0),,SPECULATE_NOT_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprnz,"if (Rs32==#0) jump:nt #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register false",{fBRANCH_SPECULATE_STALL((RsV==0),,SPECULATE_NOT_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprzpt,"if (Rs32!=#0) jump:t #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register true",{fBRANCH_SPECULATE_STALL((RsV!=0), , SPECULATE_TAKEN,12,0) if (RsV != 0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprnzpt,"if (Rs32==#0) jump:t #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register false",{fBRANCH_SPECULATE_STALL((RsV==0), , SPECULATE_TAKEN,12,0) if (RsV == 0) {fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprgtez,"if (Rs32>=#0) jump:nt #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register greater or equal to zero",{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_NOT_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprgtezpt,"if (Rs32>=#0) jump:t #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register greater or equal to zero",{fBRANCH_SPECULATE_STALL((RsV>=0), , SPECULATE_TAKEN,12,0) if (RsV>=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprltez,"if (Rs32<=#0) jump:nt #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register less than or equal to zero",{fBRANCH_SPECULATE_STALL((RsV<=0),,SPECULATE_NOT_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_jumprltezpt,"if (Rs32<=#0) jump:t #r13:2",ATTRIBS(A_NOTE_DEPRECATED,A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_ARCHV3,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional jump if register less than or equal to zero",{fBRANCH_SPECULATE_STALL((RsV<=0),,SPECULATE_TAKEN,12,0) if (RsV<=0) { fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_tp0_jump_nt,"p0=cmp.eq(Rs16,#U5); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_fp0_jump_nt,"p0=cmp.eq(Rs16,#U5); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_tp0_jump_t,"p0=cmp.eq(Rs16,#U5); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_fp0_jump_t,"p0=cmp.eq(Rs16,#U5); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_tp1_jump_nt,"p1=cmp.eq(Rs16,#U5); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_fp1_jump_nt,"p1=cmp.eq(Rs16,#U5); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_tp1_jump_t,"p1=cmp.eq(Rs16,#U5); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_fp1_jump_t,"p1=cmp.eq(Rs16,#U5); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_tp0_jump_nt,"p0=cmp.gt(Rs16,#U5); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_fp0_jump_nt,"p0=cmp.gt(Rs16,#U5); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_tp0_jump_t,"p0=cmp.gt(Rs16,#U5); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_fp0_jump_t,"p0=cmp.gt(Rs16,#U5); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_tp1_jump_nt,"p1=cmp.gt(Rs16,#U5); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_fp1_jump_nt,"p1=cmp.gt(Rs16,#U5); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_tp1_jump_t,"p1=cmp.gt(Rs16,#U5); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_fp1_jump_t,"p1=cmp.gt(Rs16,#U5); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_tp0_jump_nt,"p0=cmp.gtu(Rs16,#U5); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_fp0_jump_nt,"p0=cmp.gtu(Rs16,#U5); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_tp0_jump_t,"p0=cmp.gtu(Rs16,#U5); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_fp0_jump_t,"p0=cmp.gtu(Rs16,#U5); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_tp1_jump_nt,"p1=cmp.gtu(Rs16,#U5); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_fp1_jump_nt,"p1=cmp.gtu(Rs16,#U5); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_tp1_jump_t,"p1=cmp.gtu(Rs16,#U5); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_fp1_jump_t,"p1=cmp.gtu(Rs16,#U5); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>UiV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_tp0_jump_nt,"p0=cmp.eq(Rs16,#-1); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_fp0_jump_nt,"p0=cmp.eq(Rs16,#-1); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_tp0_jump_t,"p0=cmp.eq(Rs16,#-1); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_fp0_jump_t,"p0=cmp.eq(Rs16,#-1); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_tp1_jump_nt,"p1=cmp.eq(Rs16,#-1); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_fp1_jump_nt,"p1=cmp.eq(Rs16,#-1); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_tp1_jump_t,"p1=cmp.eq(Rs16,#-1); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_fp1_jump_t,"p1=cmp.eq(Rs16,#-1); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_tp0_jump_nt,"p0=cmp.gt(Rs16,#-1); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_fp0_jump_nt,"p0=cmp.gt(Rs16,#-1); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_tp0_jump_t,"p0=cmp.gt(Rs16,#-1); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_fp0_jump_t,"p0=cmp.gt(Rs16,#-1); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_tp1_jump_nt,"p1=cmp.gt(Rs16,#-1); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_fp1_jump_nt,"p1=cmp.gt(Rs16,#-1); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_tp1_jump_t,"p1=cmp.gt(Rs16,#-1); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_fp1_jump_t,"p1=cmp.gt(Rs16,#-1); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>-1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_tp0_jump_nt,"p0=tstbit(Rs16,#0); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_fp0_jump_nt,"p0=tstbit(Rs16,#0); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_tp0_jump_t,"p0=tstbit(Rs16,#0); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_fp0_jump_t,"p0=tstbit(Rs16,#0); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_tp1_jump_nt,"p1=tstbit(Rs16,#0); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_fp1_jump_nt,"p1=tstbit(Rs16,#0); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_tp1_jump_t,"p1=tstbit(Rs16,#0); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_fp1_jump_t,"p1=tstbit(Rs16,#0); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV & 1)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_tp0_jump_nt,"p0=cmp.eq(Rs16,Rt16); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_fp0_jump_nt,"p0=cmp.eq(Rs16,Rt16); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_tp0_jump_t,"p0=cmp.eq(Rs16,Rt16); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_fp0_jump_t,"p0=cmp.eq(Rs16,Rt16); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_tp1_jump_nt,"p1=cmp.eq(Rs16,Rt16); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_fp1_jump_nt,"p1=cmp.eq(Rs16,Rt16); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_tp1_jump_t,"p1=cmp.eq(Rs16,Rt16); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_fp1_jump_t,"p1=cmp.eq(Rs16,Rt16); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV==RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_tp0_jump_nt,"p0=cmp.gt(Rs16,Rt16); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_fp0_jump_nt,"p0=cmp.gt(Rs16,Rt16); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_tp0_jump_t,"p0=cmp.gt(Rs16,Rt16); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_fp0_jump_t,"p0=cmp.gt(Rs16,Rt16); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_tp1_jump_nt,"p1=cmp.gt(Rs16,Rt16); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_fp1_jump_nt,"p1=cmp.gt(Rs16,Rt16); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_tp1_jump_t,"p1=cmp.gt(Rs16,Rt16); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_fp1_jump_t,"p1=cmp.gt(Rs16,Rt16); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((RsV>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_tp0_jump_nt,"p0=cmp.gtu(Rs16,Rt16); if (p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_fp0_jump_nt,"p0=cmp.gtu(Rs16,Rt16); if (!p0.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_tp0_jump_t,"p0=cmp.gtu(Rs16,Rt16); if (p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0,,SPECULATE_TAKEN,13,0) if (fLSBNEW0) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_fp0_jump_t,"p0=cmp.gtu(Rs16,Rt16); if (!p0.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P0(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW0NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW0NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_tp1_jump_nt,"p1=cmp.gtu(Rs16,Rt16); if (p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_fp1_jump_nt,"p1=cmp.gtu(Rs16,Rt16); if (!p1.new) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_NOT_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_tp1_jump_t,"p1=cmp.gtu(Rs16,Rt16); if (p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1,,SPECULATE_TAKEN,13,0) if (fLSBNEW1) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_fp1_jump_t,"p1=cmp.gtu(Rs16,Rt16); if (!p1.new) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_DOTNEW,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_NEWCMPJUMP,A_PRED_BIT_13,A_XUMINOR),"compound compare-jump",{fPART1(fWRITE_P1(f8BITSOF((fCAST4u(RsV)>RtV)))) fBRANCH_SPECULATE_STALL(fLSBNEW1NOT,,SPECULATE_TAKEN,13,0) if (fLSBNEW1NOT) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_jumpseti,"Rd16=#U6 ; jump #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_BRANCHADDER,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RELAX_UNC),"direct unconditional jump and set register to immediate",{fIMMEXT(riV); fPCALIGN(riV); RdV=UiV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);})
Q6INSN(J4_jumpsetr,"Rd16=Rs16 ; jump #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_BRANCHADDER,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RELAX_UNC),"direct unconditional jump and transfer register",{fIMMEXT(riV); fPCALIGN(riV); RdV=RsV; fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);})
Q6INSN(J4_cmpeqi_t_jumpnv_t,"if (cmp.eq(Ns8.new,#U5)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_t_jumpnv_nt,"if (cmp.eq(Ns8.new,#U5)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_f_jumpnv_t,"if (!cmp.eq(Ns8.new,#U5)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqi_f_jumpnv_nt,"if (!cmp.eq(Ns8.new,#U5)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_t_jumpnv_t,"if (cmp.gt(Ns8.new,#U5)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_t_jumpnv_nt,"if (cmp.gt(Ns8.new,#U5)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_f_jumpnv_t,"if (!cmp.gt(Ns8.new,#U5)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_TAKEN,13,0); if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgti_f_jumpnv_nt,"if (!cmp.gt(Ns8.new,#U5)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_t_jumpnv_t,"if (cmp.gtu(Ns8.new,#U5)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_t_jumpnv_nt,"if (cmp.gtu(Ns8.new,#U5)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_f_jumpnv_t,"if (!cmp.gtu(Ns8.new,#U5)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtui_f_jumpnv_nt,"if (!cmp.gtu(Ns8.new,#U5)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>(UiV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>(UiV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_t_jumpnv_t,"if (cmp.eq(Ns8.new,#-1)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_t_jumpnv_nt,"if (cmp.eq(Ns8.new,#-1)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_f_jumpnv_t,"if (!cmp.eq(Ns8.new,#-1)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeqn1_f_jumpnv_nt,"if (!cmp.eq(Ns8.new,#-1)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_t_jumpnv_t,"if (cmp.gt(Ns8.new,#-1)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_t_jumpnv_nt,"if (cmp.gt(Ns8.new,#-1)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_f_jumpnv_t,"if (!cmp.gt(Ns8.new,#-1)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_TAKEN,13,0); if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtn1_f_jumpnv_nt,"if (!cmp.gt(Ns8.new,#-1)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>(-1)),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>(-1))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_t_jumpnv_t,"if (tstbit(Ns8.new,#0)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0); if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_t_jumpnv_nt,"if (tstbit(Ns8.new,#0)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_f_jumpnv_t,"if (!tstbit(Ns8.new,#0)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_TAKEN,13,0); if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_tstbit0_f_jumpnv_nt,"if (!tstbit(Ns8.new,#0)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!((fNEWREG(NsN)) & 1),,SPECULATE_NOT_TAKEN,13,0); if (!((fNEWREG(NsN)) & 1)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_t_jumpnv_t,"if (cmp.eq(Ns8.new,Rt32)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_t_jumpnv_nt,"if (cmp.eq(Ns8.new,Rt32)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)==RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)==RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_t_jumpnv_t,"if (cmp.gt(Ns8.new,Rt32)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_t_jumpnv_nt,"if (cmp.gt(Ns8.new,Rt32)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_t_jumpnv_t,"if (cmp.gtu(Ns8.new,Rt32)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_t_jumpnv_nt,"if (cmp.gtu(Ns8.new,Rt32)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmplt_t_jumpnv_t,"if (cmp.gt(Rt32,Ns8.new)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0); if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmplt_t_jumpnv_nt,"if (cmp.gt(Rt32,Ns8.new)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if ((RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpltu_t_jumpnv_t,"if (cmp.gtu(Rt32,Ns8.new)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0); if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpltu_t_jumpnv_nt,"if (cmp.gtu(Rt32,Ns8.new)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if ((fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_f_jumpnv_t,"if (!cmp.eq(Ns8.new,Rt32)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_TAKEN,13,0); if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpeq_f_jumpnv_nt,"if (!cmp.eq(Ns8.new,Rt32)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL((fNEWREG(NsN)!=RtV),,SPECULATE_NOT_TAKEN,13,0); if ((fNEWREG(NsN)!=RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_f_jumpnv_t,"if (!cmp.gt(Ns8.new,Rt32)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_TAKEN,13,0); if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgt_f_jumpnv_nt,"if (!cmp.gt(Ns8.new,Rt32)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fNEWREG(NsN)>RtV),,SPECULATE_NOT_TAKEN,13,0); if (!(fNEWREG(NsN)>RtV)) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_f_jumpnv_t,"if (!cmp.gtu(Ns8.new,Rt32)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpgtu_f_jumpnv_nt,"if (!cmp.gtu(Ns8.new,Rt32)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV)),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(fNEWREG(NsN))>fCAST4u(RtV))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmplt_f_jumpnv_t,"if (!cmp.gt(Rt32,Ns8.new)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_TAKEN,13,0); if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmplt_f_jumpnv_nt,"if (!cmp.gt(Rt32,Ns8.new)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(RtV>fNEWREG(NsN)),,SPECULATE_NOT_TAKEN,13,0); if (!(RtV>fNEWREG(NsN))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpltu_f_jumpnv_t,"if (!cmp.gtu(Rt32,Ns8.new)) jump:t #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_TAKEN,13,0); if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J4_cmpltu_f_jumpnv_nt,"if (!cmp.gtu(Rt32,Ns8.new)) jump:nt #r9:2",ATTRIBS(A_JUMP,A_DIRECT,A_CJUMP,A_BRANCHADDER,A_RESTRICT_COF_MAX1,    A_DOTNEWVALUE,A_MEMLIKE_PACKET_RULES,A_RESTRICT_SINGLE_MEM_FIRST,A_ROPS_2,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_RESTRICT_NOSLOT1_STORE,A_RESTRICT_SLOT0ONLY,A_PRED_BIT_13),"compound compare-jump",{fBRANCH_SPECULATE_STALL(!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN))),,SPECULATE_NOT_TAKEN,13,0); if (!(fCAST4u(RtV)>fCAST4u(fNEWREG(NsN)))) {fIMMEXT(riV); fPCALIGN(riV); fBRANCH(fREAD_PC()+riV,COF_TYPE_JUMP);}})
Q6INSN(J2_call,"call #r22:2",ATTRIBS(A_CALL,A_DIRECT,A_BRANCHADDER,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_PACKET_PC,A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_XUMINOR),"direct unconditional call",{fIMMEXT(riV); fPCALIGN(riV); fCALL(fREAD_PC()+riV); })
Q6INSN(J2_callt,"if (Pu4) call #r15:2",ATTRIBS(A_CALL,A_DIRECT,A_BRANCHADDER,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_PACKET_PC,A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_CONDITIONAL,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional call if true",{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLD(PuV)) { fCALL(fREAD_PC()+riV); }})
Q6INSN(J2_callf,"if (!Pu4) call #r15:2",ATTRIBS(A_CALL,A_DIRECT,A_BRANCHADDER,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_PACKET_PC,A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_CONDITIONAL,A_RESTRICT_COF_MAX1,A_RELAX_COF_2ND,A_RELAX_COF_1ST,A_PRED_BIT_12),"direct conditional call if false",{fIMMEXT(riV); fPCALIGN(riV); fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0); if (fLSBOLDNOT(PuV)) { fCALL(fREAD_PC()+riV); }})
Q6INSN(J2_callr,"callr Rs32",ATTRIBS(A_CALL,A_INDIRECT,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1),"indirect unconditional call",{ fCALLR(RsV); })
Q6INSN(J2_callrt,"if (Pu4) callr Rs32",ATTRIBS(A_CALL,A_INDIRECT,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_PRED_BIT_12),"indirect conditional call if true",{fBRANCH_SPECULATE_STALL(fLSBOLD(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLD(PuV)) { fCALLR(RsV); }})
Q6INSN(J2_callrf,"if (!Pu4) callr Rs32",ATTRIBS(A_CALL,A_INDIRECT,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_NOTE_CONDITIONAL,A_PRED_BIT_12),"indirect conditional call if false",{fBRANCH_SPECULATE_STALL(fLSBOLDNOT(PuV),,SPECULATE_NOT_TAKEN,12,0);if (fLSBOLDNOT(PuV)) { fCALLR(RsV); }})
Q6INSN(J2_callrh,"callrh Rs32",ATTRIBS(A_CALL,A_INDIRECT,A_RESTRICT_LOOP_LA,A_RESTRICT_COF_MAX1,A_HINTED_COF),"hinted indirect unconditional call",{ fCALLR(RsV); })
Q6INSN(J2_loop0r,"loop0(#r7:2,Rs32)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_HWLOOP0_SETUP,A_XUMINOR),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(0); })
Q6INSN(J2_loop1r,"loop1(#r7:2,Rs32)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_HWLOOP1_SETUP,A_XUMINOR),"Initialize HW loop 1",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, RsV); })
Q6INSN(J2_loop0i,"loop0(#r7:2,#U10)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(0); })
Q6INSN(J2_loop1i,"loop1(#r7:2,#U10)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_HWLOOP1_SETUP),"Initialize HW loop 1",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS1( fREAD_PC()+riV, UiV); })
Q6INSN(J2_ploop1sr,"p3=sp1loop0(#r7:2,Rs32)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_ARCHV2,A_RESTRICT_LATEPRED,A_NOTE_LATEPRED,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(1); fWRITE_P3_LATE(0); })
Q6INSN(J2_ploop1si,"p3=sp1loop0(#r7:2,#U10)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_ARCHV2,A_RESTRICT_LATEPRED,A_NOTE_LATEPRED,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(1); fWRITE_P3_LATE(0); })
Q6INSN(J2_ploop2sr,"p3=sp2loop0(#r7:2,Rs32)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_ARCHV2,A_RESTRICT_LATEPRED,A_NOTE_LATEPRED,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(2); fWRITE_P3_LATE(0); })
Q6INSN(J2_ploop2si,"p3=sp2loop0(#r7:2,#U10)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_ARCHV2,A_RESTRICT_LATEPRED,A_NOTE_LATEPRED,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(2); fWRITE_P3_LATE(0); })
Q6INSN(J2_ploop3sr,"p3=sp3loop0(#r7:2,Rs32)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_ARCHV2,A_RESTRICT_LATEPRED,A_NOTE_LATEPRED,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, RsV); fSET_LPCFG(3); fWRITE_P3_LATE(0); })
Q6INSN(J2_ploop3si,"p3=sp3loop0(#r7:2,#U10)",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_RELATIVE_ADDRESS,A_NOTE_PACKET_PC,    A_NOTE_LA_RESTRICT,A_RESTRICT_LOOP_LA,A_BRANCHADDER,A_IT_HWLOOP,A_RELAX_COF_1ST,A_RELAX_COF_2ND,A_ARCHV2,A_RESTRICT_LATEPRED,A_NOTE_LATEPRED,A_HWLOOP0_SETUP),"Initialize HW loop 0",{ fIMMEXT(riV); fPCALIGN(riV); fWRITE_LOOP_REGS0( fREAD_PC()+riV, UiV); fSET_LPCFG(3); fWRITE_P3_LATE(0); })
Q6INSN(J2_endloop01,"endloop01",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_PACKET_PC,A_RESTRICT_NOCOF,A_NOTE_NOCOF_RESTRICT,A_ROPS_3,A_HWLOOP0_END,A_HWLOOP1_END,A_RESTRICT_LATEPRED),"Loopend for inner and outer loop",{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fSET_LPCFG(fGET_LPCFG-1); fHIDE(MARK_LATE_PRED_WRITE(3)) } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } else { if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } } })
Q6INSN(J2_endloop0,"endloop0",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_PACKET_PC,A_RESTRICT_NOCOF,A_NOTE_NOCOF_RESTRICT,A_ROPS_3,A_HWLOOP0_END,A_RESTRICT_LATEPRED),"Loopend for inner loop",{ if (fGET_LPCFG) { fHIDE( if (fGET_LPCFG >= 2) { fWRITE_P3(fNOATTRIB_READ_P3()); } else ) if (fGET_LPCFG==1) { fWRITE_P3(0xff); } fHIDE(MARK_LATE_PRED_WRITE(3)) fSET_LPCFG(fGET_LPCFG-1); } if (fREAD_LC0>1) { fBRANCH(fREAD_SA0,COF_TYPE_LOOPEND0); fHIDE(fLOOPSTATS(fREAD_SA0);) fWRITE_LC0(fREAD_LC0-1); } })
Q6INSN(J2_endloop1,"endloop1",ATTRIBS(A_NOTE_PACKET_NPC,A_NOTE_PACKET_PC,A_RESTRICT_NOCOF,A_NOTE_NOCOF_RESTRICT,A_ROPS_3,A_HWLOOP1_END),"Loopend for outer loop",{ if (fREAD_LC1>1) { fBRANCH(fREAD_SA1,COF_TYPE_LOOPEND1); fHIDE(fLOOPSTATS(fREAD_SA1);) fWRITE_LC1(fREAD_LC1-1); } })
Q6INSN(C2_cmpeq,"Pd4=cmp.eq(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"Compare for Equal",{PdV=f8BITSOF(RsV==RtV);})
Q6INSN(C2_cmpgt,"Pd4=cmp.gt(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"Compare for signed Greater Than",{PdV=f8BITSOF(RsV>RtV);})
Q6INSN(C2_cmpgtu,"Pd4=cmp.gtu(Rs32,Rt32)",ATTRIBS(A_XUMINOR),"Compare for Greater Than Unsigned",{PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(RtV));})
Q6INSN(C2_cmpeqp,"Pd4=cmp.eq(Rss32,Rtt32)",ATTRIBS(),"Compare for Equal",{PdV=f8BITSOF(RssV==RttV);})
Q6INSN(C2_cmpgtp,"Pd4=cmp.gt(Rss32,Rtt32)",ATTRIBS(),"Compare for signed Greater Than",{PdV=f8BITSOF(RssV>RttV);})
Q6INSN(C2_cmpgtup,"Pd4=cmp.gtu(Rss32,Rtt32)",ATTRIBS(),"Compare for Greater Than Unsigned",{PdV=f8BITSOF(fCAST8u(RssV)>fCAST8u(RttV));})
Q6INSN(A4_rcmpeqi,"Rd32=cmp.eq(Rs32,#s8)",ATTRIBS(),"Compare for Equal",{fIMMEXT(siV); RdV=(RsV==siV); })
Q6INSN(A4_rcmpneqi,"Rd32=!cmp.eq(Rs32,#s8)",ATTRIBS(),"Compare for Equal",{fIMMEXT(siV); RdV=(RsV!=siV); })
Q6INSN(A4_rcmpeq,"Rd32=cmp.eq(Rs32,Rt32)",ATTRIBS(),"Compare for Equal",{RdV=(RsV==RtV); })
Q6INSN(A4_rcmpneq,"Rd32=!cmp.eq(Rs32,Rt32)",ATTRIBS(),"Compare for Equal",{RdV=(RsV!=RtV); })
Q6INSN(C2_bitsset,"Pd4=bitsset(Rs32,Rt32)",ATTRIBS(A_ARCHV2),"Compare for selected bits set",{PdV=f8BITSOF((RsV&RtV)==RtV);})
Q6INSN(C2_bitsclr,"Pd4=bitsclr(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Compare for selected bits clear",{PdV=f8BITSOF((RsV&RtV)==0);})
Q6INSN(C4_nbitsset,"Pd4=!bitsset(Rs32,Rt32)",ATTRIBS(A_ARCHV2),"Compare for selected bits set",{PdV=f8BITSOF((RsV&RtV)!=RtV);})
Q6INSN(C4_nbitsclr,"Pd4=!bitsclr(Rs32,Rt32)",ATTRIBS(A_ARCHV2),"Compare for selected bits clear",{PdV=f8BITSOF((RsV&RtV)!=0);})
Q6INSN(C2_cmpeqi,"Pd4=cmp.eq(Rs32,#s10)",ATTRIBS(A_XUMINOR),"Compare for Equal",{fIMMEXT(siV); PdV=f8BITSOF(RsV==siV);})
Q6INSN(C2_cmpgti,"Pd4=cmp.gt(Rs32,#s10)",ATTRIBS(A_XUMINOR),"Compare for signed Greater Than",{fIMMEXT(siV); PdV=f8BITSOF(RsV>siV);})
Q6INSN(C2_cmpgtui,"Pd4=cmp.gtu(Rs32,#u9)",ATTRIBS(A_XUMINOR),"Compare for Greater Than Unsigned",{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)>fCAST4u(uiV));})
Q6INSN(C2_cmpgei,"Pd4=cmp.ge(Rs32,#s8)",ATTRIBS(A_MAPPING),"Mapping from Pd4=cmp.ge(Rs32,#s8) to Pd4=cmp.gt(Rs32,#s8-1)",fASM_MAP("Pd4=cmp.ge(Rs32,#s8)","Pd4=cmp.gt(Rs32,#s8-1)"))
Q6INSN(C2_cmpgeui,"Pd4=cmp.geu(Rs32,#u8)",ATTRIBS(A_MAPPING,A_CONDMAPPING),"Conditional Mapping from Pd4=cmp.geu(Rs32,#u8) to either Pd4=cmp.eq(Rs32,Rs32) or Pd4=cmp.gtu(Rs32,#u8-1)",fCOND_ASM_MAP("Pd4=cmp.geu(Rs32,#u8)","#u8==0","Pd4=cmp.eq(Rs32,Rs32)","Pd4=cmp.gtu(Rs32,#u8-1)"))
Q6INSN(C2_cmplt,"Pd4=cmp.lt(Rs32,Rt32)",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from Pd4=cmp.lt(Rs32,Rt32) to Pd4=cmp.gt(Rt32,Rs32)",fASM_MAP("Pd4=cmp.lt(Rs32,Rt32)","Pd4=cmp.gt(Rt32,Rs32)"))
Q6INSN(C2_cmpltu,"Pd4=cmp.ltu(Rs32,Rt32)",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from Pd4=cmp.ltu(Rs32,Rt32) to Pd4=cmp.gtu(Rt32,Rs32)",fASM_MAP("Pd4=cmp.ltu(Rs32,Rt32)","Pd4=cmp.gtu(Rt32,Rs32)"))
Q6INSN(C2_bitsclri,"Pd4=bitsclr(Rs32,#u6)",ATTRIBS(A_ARCHV2,A_XUMINOR),"Compare for selected bits clear",{PdV=f8BITSOF((RsV&uiV)==0);})
Q6INSN(C4_nbitsclri,"Pd4=!bitsclr(Rs32,#u6)",ATTRIBS(A_ARCHV2),"Compare for selected bits clear",{PdV=f8BITSOF((RsV&uiV)!=0);})
Q6INSN(C4_cmpneqi,"Pd4=!cmp.eq(Rs32,#s10)",ATTRIBS(),"Compare for Not Equal",{fIMMEXT(siV); PdV=f8BITSOF(RsV!=siV);})
Q6INSN(C4_cmpltei,"Pd4=!cmp.gt(Rs32,#s10)",ATTRIBS(),"Compare for Less Than or Equal",{fIMMEXT(siV); PdV=f8BITSOF(RsV<=siV);})
Q6INSN(C4_cmplteui,"Pd4=!cmp.gtu(Rs32,#u9)",ATTRIBS(),"Compare for Less Than or Equal Unsigned",{fIMMEXT(uiV); PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(uiV));})
Q6INSN(C4_cmpneq,"Pd4=!cmp.eq(Rs32,Rt32)",ATTRIBS(),"And-Compare for Equal",{PdV=f8BITSOF(RsV!=RtV);})
Q6INSN(C4_cmplte,"Pd4=!cmp.gt(Rs32,Rt32)",ATTRIBS(),"And-Compare for signed Greater Than",{PdV=f8BITSOF(RsV<=RtV);})
Q6INSN(C4_cmplteu,"Pd4=!cmp.gtu(Rs32,Rt32)",ATTRIBS(),"And-Compare for Greater Than Unsigned",{PdV=f8BITSOF(fCAST4u(RsV)<=fCAST4u(RtV));})
Q6INSN(C2_and,"Pd4=and(Pt4,Ps4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Predicate AND",{fPREDUSE_TIMING();PdV=PsV & PtV;})
Q6INSN(C2_or,"Pd4=or(Pt4,Ps4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Predicate OR",{fPREDUSE_TIMING();PdV=PsV | PtV;})
Q6INSN(C2_xor,"Pd4=xor(Ps4,Pt4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Predicate XOR",{fPREDUSE_TIMING();PdV=PsV ^ PtV;})
Q6INSN(C2_andn,"Pd4=and(Pt4,!Ps4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Predicate AND NOT",{fPREDUSE_TIMING();PdV=PtV & (~PsV);})
Q6INSN(C2_not,"Pd4=not(Ps4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Logical NOT Predicate",{fPREDUSE_TIMING();PdV=~PsV;})
Q6INSN(C2_orn,"Pd4=or(Pt4,!Ps4)",ATTRIBS(A_ARCHV2,A_CRSLOT23,A_NOTE_CRSLOT23),"Predicate OR NOT",{fPREDUSE_TIMING();PdV=PtV | (~PsV);})
Q6INSN(C4_and_and,"Pd4=and(Ps4,and(Pt4,Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound And-And",{ fPREDUSE_TIMING();PdV = PsV & PtV & PuV; })
Q6INSN(C4_and_or,"Pd4=and(Ps4,or(Pt4,Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound And-Or",{ fPREDUSE_TIMING();PdV = PsV & (PtV | PuV); })
Q6INSN(C4_or_and,"Pd4=or(Ps4,and(Pt4,Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound Or-And",{ fPREDUSE_TIMING();PdV = PsV | (PtV & PuV); })
Q6INSN(C4_or_or,"Pd4=or(Ps4,or(Pt4,Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound Or-Or",{ fPREDUSE_TIMING();PdV = PsV | PtV | PuV; })
Q6INSN(C4_and_andn,"Pd4=and(Ps4,and(Pt4,!Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound And-And",{ fPREDUSE_TIMING();PdV = PsV & PtV & (~PuV); })
Q6INSN(C4_and_orn,"Pd4=and(Ps4,or(Pt4,!Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound And-Or",{ fPREDUSE_TIMING();PdV = PsV & (PtV | (~PuV)); })
Q6INSN(C4_or_andn,"Pd4=or(Ps4,and(Pt4,!Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound Or-And",{ fPREDUSE_TIMING();PdV = PsV | (PtV & (~PuV)); })
Q6INSN(C4_or_orn,"Pd4=or(Ps4,or(Pt4,!Pu4))",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Compound Or-Or",{ fPREDUSE_TIMING();PdV = PsV | PtV | (~PuV); })
Q6INSN(C2_pxfer_map,"Pd4=Ps4",ATTRIBS(A_MAPPING,A_ARCHV2),"Mapping from Pd4=Ps4 to Pd4=or(Ps4,Ps4)",fASM_MAP("Pd4=Ps4","Pd4=or(Ps4,Ps4)"))
Q6INSN(C2_any8,"Pd4=any8(Ps4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Logical ANY of low 8 predicate bits",{ fPREDUSE_TIMING();PdV = (PsV ? 0xff : 0x00);})
Q6INSN(C2_all8,"Pd4=all8(Ps4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Logical ALL of low 8 predicate bits",{ fPREDUSE_TIMING();PdV = (PsV == 0xff ? 0xff : 0x00);})
Q6INSN(C2_vitpack,"Rd32=vitpack(Ps4,Pt4)",ATTRIBS(),"Pack the odd and even bits of two predicate registers",{ fPREDUSE_TIMING();RdV = (PsV&0x55) | (PtV&0xAA); })
Q6INSN(C2_mux,"Rd32=mux(Pu4,Rs32,Rt32)",ATTRIBS(),"Scalar MUX",{ fPREDUSE_TIMING();RdV = (fLSBOLD(PuV) ? RsV : RtV);})
Q6INSN(C2_cmovenewit,"if (Pu4.new) Rd32=#s12",ATTRIBS(A_ARCHV2,A_XUMINOR),"Scalar conditional move",{ fIMMEXT(siV); if (fLSBNEW(PuN)) RdV=siV; else CANCEL;})
Q6INSN(C2_cmovenewif,"if (!Pu4.new) Rd32=#s12",ATTRIBS(A_ARCHV2,A_XUMINOR),"Scalar conditional move",{ fIMMEXT(siV); if (fLSBNEWNOT(PuN)) RdV=siV; else CANCEL;})
Q6INSN(C2_cmoveit,"if (Pu4) Rd32=#s12",ATTRIBS(A_ARCHV2,A_XUMINOR),"Scalar conditional move",{ fIMMEXT(siV); if (fLSBOLD(PuV)) RdV=siV; else CANCEL;})
Q6INSN(C2_cmoveif,"if (!Pu4) Rd32=#s12",ATTRIBS(A_ARCHV2,A_XUMINOR),"Scalar conditional move",{ fIMMEXT(siV); if (fLSBOLDNOT(PuV)) RdV=siV; else CANCEL;})
Q6INSN(C2_ccombinewnewt,"if (Pu4.new) Rdd32=combine(Rs32,Rt32)",ATTRIBS(A_ROPS_2,A_ARCHV2),"Conditionally combine two words into a register pair",{ if (fLSBNEW(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
Q6INSN(C2_ccombinewnewf,"if (!Pu4.new) Rdd32=combine(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_ROPS_2),"Conditionally combine two words into a register pair",{ if (fLSBNEWNOT(PuN)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
Q6INSN(C2_ccombinewt,"if (Pu4) Rdd32=combine(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_ROPS_2),"Conditionally combine two words into a register pair",{ if (fLSBOLD(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
Q6INSN(C2_ccombinewf,"if (!Pu4) Rdd32=combine(Rs32,Rt32)",ATTRIBS(A_ARCHV2,A_ROPS_2),"Conditionally combine two words into a register pair",{ if (fLSBOLDNOT(PuV)) { fSETWORD(0,RddV,RtV); fSETWORD(1,RddV,RsV); } else {CANCEL;} })
Q6INSN(C2_muxii,"Rd32=mux(Pu4,#s8,#S8)",ATTRIBS(A_ARCHV2),"Scalar MUX immediates",{ fPREDUSE_TIMING();fIMMEXT(siV); RdV = (fLSBOLD(PuV) ? siV : SiV);})
Q6INSN(C2_muxir,"Rd32=mux(Pu4,Rs32,#s8)",ATTRIBS(A_ARCHV2),"Scalar MUX register immediate",{ fPREDUSE_TIMING();fIMMEXT(siV); RdV = (fLSBOLD(PuV) ? RsV : siV);})
Q6INSN(C2_muxri,"Rd32=mux(Pu4,#s8,Rs32)",ATTRIBS(A_ARCHV2),"Scalar MUX register immediate",{ fPREDUSE_TIMING();fIMMEXT(siV); RdV = (fLSBOLD(PuV) ? siV : RsV);})
Q6INSN(C2_vmux,"Rdd32=vmux(Pu4,Rss32,Rtt32)",ATTRIBS(),"Vector MUX",{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PuV)?(fGETBYTE(i,RssV)):(fGETBYTE(i,RttV)))); } })
Q6INSN(C2_mask,"Rdd32=mask(Pt4)",ATTRIBS(),"Vector Mask Generation",{ fPREDUSE_TIMING(); fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBYTE(i,RddV,(fGETBIT(i,PtV)?(0xff):(0x00))); } })
Q6INSN(A2_vcmpbeq,"Pd4=vcmpb.eq(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) == fGETBYTE(i,RttV))); } })
Q6INSN(A4_vcmpbeqi,"Pd4=vcmpb.eq(Rss32,#u8)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) == uiV)); } })
Q6INSN(A4_vcmpbeq_any,"Pd4=any8(vcmpb.eq(Rss32,Rtt32))",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } })
Q6INSN(A6_vcmpbeq_notany,"Pd4=!any8(vcmpb.eq(Rss32,Rtt32))",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) PdV = 0; for (i = 0; i < 8; i++) { if (fGETBYTE(i,RssV) == fGETBYTE(i,RttV)) PdV = 0xff; } PdV = ~PdV; })
Q6INSN(A2_vcmpbgtu,"Pd4=vcmpb.gtu(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > fGETUBYTE(i,RttV))); } })
Q6INSN(A4_vcmpbgtui,"Pd4=vcmpb.gtu(Rss32,#u7)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETUBYTE(i,RssV) > uiV)); } })
Q6INSN(A4_vcmpbgt,"Pd4=vcmpb.gt(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > fGETBYTE(i,RttV))); } })
Q6INSN(A4_vcmpbgti,"Pd4=vcmpb.gt(Rss32,#s8)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 8; i++) { fSETBIT(i,PdV,(fGETBYTE(i,RssV) > siV)); } })
Q6INSN(A4_cmpbeq,"Pd4=cmpb.eq(Rs32,Rt32)",ATTRIBS(),"Compare bytes ",{ PdV=f8BITSOF(fGETBYTE(0,RsV) == fGETBYTE(0,RtV)); })
Q6INSN(A4_cmpbeqi,"Pd4=cmpb.eq(Rs32,#u8)",ATTRIBS(),"Compare bytes ",{ PdV=f8BITSOF(fGETUBYTE(0,RsV) == uiV); })
Q6INSN(A4_cmpbgtu,"Pd4=cmpb.gtu(Rs32,Rt32)",ATTRIBS(),"Compare bytes ",{ PdV=f8BITSOF(fGETUBYTE(0,RsV) > fGETUBYTE(0,RtV)); })
Q6INSN(A4_cmpbgtui,"Pd4=cmpb.gtu(Rs32,#u7)",ATTRIBS(),"Compare bytes ",{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUBYTE(0,RsV) > fCAST4u(uiV)); })
Q6INSN(A4_cmpbgt,"Pd4=cmpb.gt(Rs32,Rt32)",ATTRIBS(),"Compare bytes ",{ PdV=f8BITSOF(fGETBYTE(0,RsV) > fGETBYTE(0,RtV)); })
Q6INSN(A4_cmpbgti,"Pd4=cmpb.gt(Rs32,#s8)",ATTRIBS(),"Compare bytes ",{ PdV=f8BITSOF(fGETBYTE(0,RsV) > siV); })
Q6INSN(A2_vcmpheq,"Pd4=vcmph.eq(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == fGETHALF(i,RttV))); } })
Q6INSN(A2_vcmphgt,"Pd4=vcmph.gt(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > fGETHALF(i,RttV))); } })
Q6INSN(A2_vcmphgtu,"Pd4=vcmph.gtu(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > fGETUHALF(i,RttV))); } })
Q6INSN(A4_vcmpheqi,"Pd4=vcmph.eq(Rss32,#s8)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2,PdV, (fGETHALF(i,RssV) == siV)); fSETBIT(i*2+1,PdV,(fGETHALF(i,RssV) == siV)); } })
Q6INSN(A4_vcmphgti,"Pd4=vcmph.gt(Rss32,#s8)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETHALF(i,RssV) > siV)); fSETBIT(i*2+1,PdV, (fGETHALF(i,RssV) > siV)); } })
Q6INSN(A4_vcmphgtui,"Pd4=vcmph.gtu(Rss32,#u7)",ATTRIBS(),"Compare elements of two vectors ",{ fHIDE(int i;) for (i = 0; i < 4; i++) { fSETBIT(i*2, PdV, (fGETUHALF(i,RssV) > uiV)); fSETBIT(i*2+1,PdV, (fGETUHALF(i,RssV) > uiV)); } })
Q6INSN(A4_cmpheq,"Pd4=cmph.eq(Rs32,Rt32)",ATTRIBS(),"Compare halfwords ",{ PdV=f8BITSOF(fGETHALF(0,RsV) == fGETHALF(0,RtV)); })
Q6INSN(A4_cmphgt,"Pd4=cmph.gt(Rs32,Rt32)",ATTRIBS(),"Compare halfwords ",{ PdV=f8BITSOF(fGETHALF(0,RsV) > fGETHALF(0,RtV)); })
Q6INSN(A4_cmphgtu,"Pd4=cmph.gtu(Rs32,Rt32)",ATTRIBS(),"Compare halfwords ",{ PdV=f8BITSOF(fGETUHALF(0,RsV) > fGETUHALF(0,RtV)); })
Q6INSN(A4_cmpheqi,"Pd4=cmph.eq(Rs32,#s8)",ATTRIBS(),"Compare halfwords ",{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) == siV); })
Q6INSN(A4_cmphgti,"Pd4=cmph.gt(Rs32,#s8)",ATTRIBS(),"Compare halfwords ",{ fIMMEXT(siV); PdV=f8BITSOF(fGETHALF(0,RsV) > siV); })
Q6INSN(A4_cmphgtui,"Pd4=cmph.gtu(Rs32,#u7)",ATTRIBS(),"Compare halfwords ",{ fIMMEXT(uiV); PdV=f8BITSOF(fGETUHALF(0,RsV) > fCAST4u(uiV)); })
Q6INSN(A2_vcmpweq,"Pd4=vcmpw.eq(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==fGETWORD(1,RttV))); })
Q6INSN(A2_vcmpwgt,"Pd4=vcmpw.gt(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>fGETWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>fGETWORD(1,RttV))); })
Q6INSN(A2_vcmpwgtu,"Pd4=vcmpw.gtu(Rss32,Rtt32)",ATTRIBS(),"Compare elements of two vectors ",{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fGETUWORD(0,RttV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fGETUWORD(1,RttV))); })
Q6INSN(A4_vcmpweqi,"Pd4=vcmpw.eq(Rss32,#s8)",ATTRIBS(),"Compare elements of two vectors ",{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)==siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)==siV)); })
Q6INSN(A4_vcmpwgti,"Pd4=vcmpw.gt(Rss32,#s8)",ATTRIBS(),"Compare elements of two vectors ",{ fSETBITS(3,0,PdV,(fGETWORD(0,RssV)>siV)); fSETBITS(7,4,PdV,(fGETWORD(1,RssV)>siV)); })
Q6INSN(A4_vcmpwgtui,"Pd4=vcmpw.gtu(Rss32,#u7)",ATTRIBS(),"Compare elements of two vectors ",{ fSETBITS(3,0,PdV,(fGETUWORD(0,RssV)>fCAST4u(uiV))); fSETBITS(7,4,PdV,(fGETUWORD(1,RssV)>fCAST4u(uiV))); })
Q6INSN(A4_boundscheck_hi,"Pd4=boundscheck(Rss32,Rtt32):raw:hi",ATTRIBS(),"Detect if a register is within bounds",{ fHIDE(size4u_t src;) src = fGETUWORD(1,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); })
Q6INSN(A4_boundscheck_lo,"Pd4=boundscheck(Rss32,Rtt32):raw:lo",ATTRIBS(),"Detect if a register is within bounds",{ fHIDE(size4u_t src;) src = fGETUWORD(0,RssV); PdV = f8BITSOF((fCAST4u(src) >= fGETUWORD(0,RttV)) && (fCAST4u(src) < fGETUWORD(1,RttV))); })
Q6INSN(A4_boundscheck,"Pd4=boundscheck(Rs32,Rtt32)",ATTRIBS(A_MAPPING,A_CONDMAPPING,A_ARCHV4),"Conditional Mapping from Pd4=boundscheck(Rs32,Rtt32) to either Pd4=boundscheck(Rss32,Rtt32):raw:hi or Pd4=boundscheck(Rss32,Rtt32):raw:lo",fCOND_ASM_MAP("Pd4=boundscheck(Rs32,Rtt32)","Rs32 & 1","Pd4=boundscheck(Rss32,Rtt32):raw:hi","Pd4=boundscheck(Rss32,Rtt32):raw:lo"))
Q6INSN(A4_tlbmatch,"Pd4=tlbmatch(Rss32,Rt32)",ATTRIBS(A_NOTE_LATEPRED,A_RESTRICT_LATEPRED),"Detect if a VA/ASID matches a TLB entry",{ fHIDE(size4u_t TLBHI; size4u_t TLBLO; size4u_t MASK; size4u_t SIZE;) MASK = 0x07ffffff; TLBLO = fGETUWORD(0,RssV); TLBHI = fGETUWORD(1,RssV); SIZE = fMIN(fTLBMATCH_MIN_SIZE(),fCL1_4(~fBREV_4(TLBLO))); MASK &= (0xffffffff << 2*SIZE); PdV = f8BITSOF(fGETBIT(31,TLBHI) && ((TLBHI & MASK) == (RtV & MASK))); fHIDE(MARK_LATE_PRED_WRITE(PdN)) })
Q6INSN(C2_tfrpr,"Rd32=Ps4",ATTRIBS(),"Transfer predicate to general register",{ fPREDUSE_TIMING();RdV = fZXTN(8,32,PsV); })
Q6INSN(C2_tfrrp,"Pd4=Rs32",ATTRIBS(),"Transfer general register to Predicate",{ PdV = fGETUBYTE(0,RsV); })
Q6INSN(C4_fastcorner9,"Pd4=fastcorner9(Ps4,Pt4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Determine whether the predicate sources define a corner",{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp != 0); })
Q6INSN(C4_fastcorner9_not,"Pd4=!fastcorner9(Ps4,Pt4)",ATTRIBS(A_CRSLOT23,A_NOTE_CRSLOT23),"Determine whether the predicate sources define a corner",{ fPREDUSE_TIMING(); fHIDE(size4u_t tmp = 0; size4u_t i;) fSETHALF(0,tmp,(PsV<<8)|PtV); fSETHALF(1,tmp,(PsV<<8)|PtV); for (i = 1; i < 9; i++) { tmp &= tmp >> 1; } PdV = f8BITSOF(tmp == 0); })
