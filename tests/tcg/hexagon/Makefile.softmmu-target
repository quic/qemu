# -*- Mode: makefile -*-
#
# Hexagon SoftMMU tests - included from tests/tcg/Makefile
#

HEXAGON_SYSTEM_SRC=$(SRC_PATH)/tests/tcg/hexagon/system

# Set search path for all sources
VPATH 		+= $(HEXAGON_SYSTEM_SRC)

TESTS += \
	standalone_hw \
	standalone_vec \
	mmu_test \
	badva \
	tlblock \
	k0lock \
	invalid_opcode \
	invalid_hmx \
	sys_atomics \
	timer_reg \
	qtimer_test \
	qtimer \
	bestwait \
	ciad-siad \
	fastl2vic \
	fastint \
	swi \
	udma \
	ieee_fp \
	hmx \
	hmx_conv \
	hmx_conv_fp16 \
	pcycle \
	neg-framelimit \
	neg-float_excp \
	neg-hvx_nocoproc \
	neg-unaligned \
	pendalot \
	vid-group \
	levelint \
	swi_fs \
	vid_reg \
	int_range \
	fopen \
	ftrunc \
	test-thread \
	access \
	getcwd \
	$()

CFLAGS+=-G0 -O2

CRT_OBJS=boot.o

LDFLAGS+= -static

# Build and link the tests
%.o: %.S
	$(CC) $(ASFLAGS) $(EXTRA_CFLAGS) -c $< -o $@
%.o: %.c
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c $< -o $@
%.o: %.cpp
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c $< -o $@

standalone_hw: standalone_hw.o monitor_insts.o
standalone_vec: standalone_vec.o
mmu_test: mmu_test.o dummy_mutex.o
badva: badva.o
tlblock: tlblock.o
k0lock: k0lock.o
invalid_opcode: invalid_opcode.o
invalid_hmx: invalid_hmx.o
sys_atomics: sys_atomics.o
timer_reg: timer_reg.o
qtimer_test: qtimer_test.o
qtimer: qtimer.o
bestwait: bestwait.o
ciad-siad: ciad-siad.o
fastl2vic: fastl2vic.o
fastint: fastint.o
swi: swi.o
udma: udma.o
ieee_fp: ieee_fp.o
hmx: hmx.o
hmx_conv: hmx_conv.o hmx_conv_asm.o util.o
hmx_conv_fp16: hmx_conv_fp16.o
wait: wait.o
pcycle: pcycle.o
neg-framelimit: framelimit.o
neg-float_excp: float_excp.o
neg-hvx_nocoproc: hvx_nocoproc.o
neg-unaligned: unaligned.o
pendalot: pendalot.o
vid-group: vid-group.o
levelint: levelint.o
swi_fs: swi_fs.o
vid_reg: vid_reg.o
int_range: int_range.o
fopen: fopen.o
ftrunc: ftrunc.o
test-thread: test-thread.o
access: access.o
getcwd: getcwd.o

$(TESTS):
	$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $^ -o $@ $(LDFLAGS)


# Specific Test Rules

memory: EXTRA_CFLAGS+=-DCHECK_UNALIGNED=1

# TODO: We should see if we can find a way to avoid this:
standalone_%: LDFLAGS+= -lc -lstandalone -mhvx -fvectorize

standalone_vec.o: CFLAGS+= -mv69 -O2 -mhvx  -fvectorize
hvx_nocoproc.o: CFLAGS+= -O2 -mhvx
ieee_fp.o: CFLAGS += -mhvx -mhvx-length=128B -mhvx-ieee-fp
hmx.o: CFLAGS+= -mhmx
hmx_conv.o: CFLAGS+= -mhmx
hmx_conv_asm.o: ASFLAGS+= -mhmx
hmx_conv_fp16.o: CFLAGS+= -mhmx

timer_reg.o: CFLAGS+= -DCSR_BASE=0xfc900000
qtimer_test.o: CFLAGS+= -DCSR_BASE=0xfc900000 -DQTMR_FREQ=19200000 -DIRQ1=3 -DIRQ2=4
qtimer.o: CFLAGS+= -DCSR_BASE=0xfc900000 -DQTMR_FREQ=19200000 -DIRQ1=3 -DIRQ2=4

QEMU_BASE_MACHINE=-M V68N_1024 -cpu v67,count-gcycle-xt=on,usefs=$(SRC_PATH)/tests/tcg/hexagon/system $(QEMU_SMP)
QEMU_OPTS+=$(QEMU_BASE_MACHINE) -kernel

run-neg-framelimit: neg-framelimit
run-neg-float_excp: neg-float_excp
run-neg-hvx_nocoproc: neg-hvx_nocoproc
run-neg-unaligned: neg-unaligned

run-vid-group: vid-group
run-timer_reg: timer_reg
run-qtimer_test: qtimer_test

ICOUNT_OPTS=-icount auto
run-vid-group run-timer_reg run-qtimer_test:
	$(call run-test, $<, $(QEMU) $(QEMU_OPTS) $<,"$< on $(TARGET_NAME)")
	$(call run-test, $<, $(QEMU) $(QEMU_OPTS) $< $(ICOUNT_OPTS),"$< on $(TARGET_NAME) icount")

run-vid-group: QEMU_BASE_MACHINE=-cpu v67,sched-limit=on

QEMU_MTTCG=-accel tcg,thread=multi
run-test-thread: QEMU_SMP=-smp cpus=8
run-test-thread: test-thread
	$(call run-test, $<, $(QEMU) -M V68N_1024  $(QEMU_OPTS) $< ,"$< on $(TARGET_NAME)")
	$(call run-test, $<, $(QEMU) -M V73NA_1024 $(QEMU_OPTS) $< ,"$< on $(TARGET_NAME)")
	$(call run-test, $<, $(QEMU) -M V73NA_1024 $(QEMU_MTTCG) $(QEMU_OPTS)  $< ,"$< on $(TARGET_NAME) mttcg")

run-fopen: fopen
	$(call run-test, $<, $(QEMU) $(QEMU_OPTS)  $< -append dummy.so,"$< on $(TARGET_NAME)")
run-ftrunc: ftrunc
	echo "valid" > _testfile_ftrunc
	stat _testfile_ftrunc | fgrep "Size: 6"
	sleep 1
	$(call run-test, $<, $(QEMU) $(QEMU_OPTS)  $<)
	stat _testfile_ftrunc | fgrep "Size: 1"

run-access: access
	echo "valid" > _testfile_access
	$(call run-test, $<, $(QEMU) $(QEMU_OPTS)  $<)

run-hmx_conv_fp16: hmx_conv_fp16
	$(call run-test, $<, $(QEMU) $(QEMU_OPTS)  $< --append "2 2 2 hmx_input_fp16.dat hmx_output_fp16.dat","$< on $(TARGET_NAME)")
